run-name: Upload dependencies for Linux - ${{ inputs.i386_architecture && 'i386' || '' }} ${{ inputs.amd64_architecture && 'amd64' || '' }} ${{ inputs.armhf_architecture && 'armhf' || '' }} ${{ inputs.arm64_architecture && 'arm64' || '' }} - ${{ inputs.id }}
on:
  pull_request:
  workflow_dispatch:
    inputs:
      i386_architecture:
        type: boolean
        description: |
          Upload dependencies for Linux systems 
          and i386 architecture.
          Default is 'false'.
        required: false
      amd64_architecture:
        type: boolean
        description: |
          Upload dependencies for Linux systems 
          and amd64 architecture.
          Default is 'false'.
        required: false
      armhf_architecture:
        type: boolean
        description: |
          Upload dependencies for Linux systems 
          and armhf architecture.
          Default is 'false'.
        required: false
      arm64_architecture:
        type: boolean
        description: |
          Upload dependencies for Linux systems 
          and arm64 architecture.
          Default is 'false'.
        required: false
      source_reference:
        description: |
          Branch from wazuh/wazuh-agent repository to use.
        required: true
      id:
        type: string
        description: |
          ID used to identify the workflow uniquely.
        required: false

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      
jobs:
  Upload-linux-dependencies-amd64:
    if: ${{ inputs.amd64_architecture == true }}  
    runs-on: ubuntu-latest
    name: Upload Linux amd64 dependencies

    steps:

      - name: Checkout wazuh/wazuh-agent repository
        uses: actions/checkout@v4
        with:
          repository: wazuh/wazuh-agent
          ref: ${{ inputs.source_reference }}

      - name: Cover vcpkg dependencies
        id: cover_vcpkg_dependencies
        uses: ./.github/actions/vcpkg_related/cover_vcpkg_dependencies
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run vcpkg install
        run: |
          cd src && vcpkg install
