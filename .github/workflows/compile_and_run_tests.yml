name: Compile and Run Tests

on:
    pull_request:
      types:
        - opened
        - synchronize
        - reopened

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  compile:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - name: Set up dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install git
        .$(C:\vcpkg\vcpkg fetch nuget) `
          sources add `
          -Source "https://nuget.pkg.github.com/wazuh/index.json" `
          -Name GitHub `
          -UserName "wazuh" `
          -Password "${{ secrets.GITHUB_TOKEN }}"
        .$(C:\vcpkg\vcpkg fetch nuget) `
          setapikey "${{ secrets.GITHUB_TOKEN }}" `
          -Source "https://nuget.pkg.github.com/wazuh/index.json"
      shell: powershell

    - name: Set up dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake
      shell: bash

    - name: Set up dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg lsb-release software-properties-common libsystemd-dev
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 18
        sudo apt-get update
        sudo apt-get install -y clang-tidy-18
      shell: bash

    - name: Set up Binary caching 
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      uses: ./.github/actions/vcpkg_related/cover_vcpkg_dependencies
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Run Compile Action
      uses: ./.github/actions/compile
      with:
        path: src/
