# Copyright (C) 2015, Wazuh Inc.
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation
#
# Based on:
# Center for Internet Security Mac0S 13 Ventura Benchmark v1.1.0 - 07-24-2023

policy:
  id: "cis_macOS_13.0_Ventura.yml"
  file: "cis_macOS_13.0_Ventura.yml"
  name: "CIS_Apple_macOS_13.0_Ventura_Benchmark_v1.1.0"
  description: "This document provides prescriptive guidance for establishing a secure configuration posture for MacOS 13 Ventura systems."
  references:
    - https://www.cisecurity.org/cis-benchmarks/

requirements:
  title: "Check MacOS 13 Ventura platform."
  description: "Requirements for running the policy against MacOS 13 Ventura."
  condition: any
  rules:
    - "f:/etc/system-release -> r:^Amazon && r:release 2"

variables:
  $sshd_file: /etc/ssh/sshd_config

checks:


  # 1.2 Ensure Auto Update Is Enabled. (Automated)
   - id: 18500
     title: "Ensure Auto Update Is Enabled."
     description: "Auto Update verifies that your system has the newest security patches and software updates. If \"Automatically check for updates\" is not selected, background updates for new malware definition files from Apple for XProtect and Gatekeeper will not occur. http://macops.ca/os-x-admins-your-clients-are-not-getting-background-security-updates/ https://derflounder.wordpress.com/2014/12/17/forcing-xprotect-blacklist-updates-on-mavericks-and-yosemite/."
     rationale: "It is important that a system has the newest updates applied so as to prevent unauthorized persons from exploiting identified vulnerabilities."
     impact: "Without automatic update, updates may not be made in a timely manner and the system will be exposed to additional risk."
     remediation: "Graphical Method: Perform the following steps to enable the system to automatically check for updates: 1. Open System Settings 2. Select General 3. Select Software Update 4. Select the i 5. Set Check for updates to enabled 6. Select Done Terminal Method: Run the following command to enable auto update: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.SoftwareUpdate 2. The key to include is AutomaticCheckEnabled 3. The key must be set to <true/>."
     compliance:
       - cis: ["1.2"]
       - cis_csc_v8: ["7.3", "7.4"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 1.3 Ensure Download New Updates When Available Is Enabled. (Automated)
   - id: 18501
     title: "Ensure Download New Updates When Available Is Enabled."
     description: "In the GUI, both \"Install macOS updates\" and \"Install app updates from the App Store\" are dependent on whether \"Download new updates when available\" is selected."
     rationale: "It is important that a system has the newest updates downloaded so that they can be applied."
     impact: "If \"Download new updates when available\" is not selected, updates may not be made in a timely manner and the system will be exposed to additional risk."
     remediation: "Perform the following to enable the system to automatically check for updates: Graphical Method: 1. Open System Settings 2. Select General 3. Select Software Update 4. Select the i 5. Set Download new updates when available to enabled 6. Select Done Terminal Method: Run the following command to enable auto update: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.SoftwareUpdate 2. The key to include is AutomaticDownload 3. The key must be set to <true/>."
     compliance:
       - cis: ["1.3"]
       - cis_csc_v8: ["7.3", "7.4"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 1.4 Ensure Install of macOS Updates Is Enabled. (Automated)
   - id: 18502
     title: "Ensure Install of macOS Updates Is Enabled."
     description: "Ensure that macOS updates are installed after they are available from Apple. This setting enables macOS updates to be automatically installed. Some environments will want to approve and test updates before they are delivered. It is best practice to test first where updates can and have caused disruptions to operations. Automatic updates should be turned off where changes are tightly controlled and there are mature testing and approval processes. Automatic updates should not be turned off simply to allow the administrator to contact users in order to verify installation. A dependable, repeatable process involving a patch agent or remote management tool should be in place before auto-updates are turned off."
     rationale: "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited."
     impact: "Unpatched software may be exploited."
     remediation: "Graphical Method: Perform the following steps to enable macOS updates to run automatically: 1. Open System Settings 2. Select General 3. Select Software Update 4. Select the i 5. Set Install macOS updates to enabled 6. Select Done Terminal Method: Run the following command to to enable automatic checking and installing of macOS updates: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticallyInstallMacOSUpdates -bool TRUE Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.SoftwareUpdate 2. The key to include is AutomaticallyInstallMacOSUpdates 3. The key must be set to <true/>."
     compliance:
       - cis: ["1.4"]
       - cis_csc_v8: ["7.3", "7.4"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 1.5 Ensure Install Application Updates from the App Store Is Enabled. (Automated)
   - id: 18503
     title: "Ensure Install Application Updates from the App Store Is Enabled."
     description: "Ensure that application updates are installed after they are available from Apple. These updates do not require reboots or administrator privileges for end users."
     rationale: "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited."
     impact: "Unpatched software may be exploited."
     remediation: "Graphical Method: Perform the following steps to enable App Store updates to install automatically: 1. Open System Settings 2. Select General 3. Select Software Update 4. Select the i 5. Set Install application updates from the App Store to enabled 6. Select Done Terminal Method: Run the following command to turn on App Store auto updating: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE Note: This remediation requires a log out and log in to show in the GUI. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.SoftwareUpdate 2. The key to include is AutomaticallyInstallAppUpdates 3. The key must be set to <true/>."
     compliance:
       - cis: ["1.5"]
       - cis_csc_v8: ["7.3", "7.4"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 1.6 Ensure Install Security Responses and System Files Is Enabled. (Automated)
   - id: 18504
     title: "Ensure Install Security Responses and System Files Is Enabled."
     description: "Ensure that system and security updates are installed after they are available from Apple. This setting enables definition updates for XProtect and Gatekeeper. With this setting in place, new malware and adware that Apple has added to the list of malware or untrusted software will not execute. These updates do not require reboots or end user admin rights. Apple has introduced a security feature that allows for smaller downloads and the installation of security updates when a reboot is not required. This feature is only available when the last regular update has already been applied. This feature emphasizes that a Mac must be up-to-date on patches so that Apple's security tools can be used to quickly patch when a rapid response is necessary."
     rationale: "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited."
     impact: "Unpatched software may be exploited."
     remediation: "Graphical Method: Perform the following steps to enable system data files and security updates to install automatically: 1. Open System Settings 2. Select General 3. Select Software Update 4. Select the i 5. Set Install Security Responses and System files to enabled 6. Select Done Terminal Method: Run the following commands to enable automatic checking of system data files and security updates: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.SoftwareUpdate 2. The key to include is ConfigDataInstall 3. The key must be set to <true/> 4. The key to also include is CriticalUpdateInstall 5. The key must be set to <true/>."
     references:
       - 'https://eclecticlight.co/2021/10/27/silently-updated-security-data-files-in-'
       - 'https://support.apple.com/en-us/HT202491'
       - 'https://support.apple.com/guide/security/protecting-against-malware-'
       - 'https://support.apple.com/guide/deployment/rapid-security-responses-'
     compliance:
       - cis: ["1.6"]
       - cis_csc_v8: ["7.3", "7.4", "7.7"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["CA.L2-3.12.2", "RA.L2-3.11.3", "SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - pci_dss_v4.0: ["11.3.1", "11.3.2", "11.3.2.1"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 1.7 Ensure Software Update Deferment Is Less Than or Equal to 30 Days. (Automated)
   - id: 18505
     title: "Ensure Software Update Deferment Is Less Than or Equal to 30 Days."
     description: "Apple provides the capability to manage software updates on Apple devices through mobile device management. Part of those capabilities permit organizations to defer software updates and allow for testing. Many organizations have specialized software and configurations that may be negatively impacted by Apple updates. If software updates are deferred, they should not be deferred for more than 30 days. This control only verifies that deferred software updates are not deferred for more than 30 days."
     rationale: "Apple software updates almost always include security updates. Attackers evaluate updates to create exploit code in order to attack unpatched systems. The longer a system remains unpatched, the greater an exploit possibility exists in which there are publicly reported vulnerabilities."
     impact: "Some organizations may need more than 30 days to evaluate the impact of software updates."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is enforcedSoftwareUpdateDelay 3. The key must be set to <integer><1-30></integer>."
     references:
       - 'https://support.apple.com/guide/deployment/manage-software-updates-'
     compliance:
       - cis: ["1.7"]
       - cis_csc_v8: ["7.3", "7.4"]
       - cis_csc_v7: ["3.4", "3.5"]
       - cmmc_v2.0: ["SI.L1-3.14.1"]
       - nist_sp_800-53: ["SI-2(2)"]
       - pci_dss_v3.2.1: ["6.2"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 2.1.1.1 Audit iCloud Keychain. (Manual)
   - id: 18506
     title: "Audit iCloud Keychain."
     description: "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts. If passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage."
     rationale: "Ensure that the iCloud keychain is used consistently with organizational requirements."
     remediation: "Graphical Method: Perform the following steps to set iCloud keychain sync based on your organization's requirements: 1. Open System Settings 2. Select Apple ID 3. Select iCloud 4. Set Keychain to meet your organization's requirements Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowCloudKeychainSync 3. The key should be set <true/>, to allow iCloud keychain syncing, or <false/>, to disable it, based on your organization's requirements Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     compliance:
       - cis: ["2.1.1.1"]
       - cis_csc_v8: ["4.1", "4.8", "15.3"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["AC-20(1)", "AC-20(2)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "12.8.5", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.1.1.2 Audit iCloud Drive. (Manual)
   - id: 18507
     title: "Audit iCloud Drive."
     description: "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive. One of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information."
     rationale: "Organizations should review third party storage solutions pertaining to existing data confidentiality and integrity requirements."
     impact: "Users will not be able to use continuity on macOS to resume the use of newly composed but unsaved files."
     remediation: "Graphical Method: Perform the following to set iCloud Drive to your organization's requirements: 1. Open System Settings 2. Select Apple ID 3. Select iCloud 4. Set iCloud Drive to meet your organization's requirements Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowCloudDocumentSync 3. The key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, based on your organization's requirements Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     references:
       - 'https://developer.apple.com/documentation/devicemanagement/restrictions'
     compliance:
       - cis: ["2.1.1.2"]
       - cis_csc_v8: ["4.1", "4.8", "15.3"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["AC-20(1)", "AC-20(2)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "12.8.5", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.1.1.3 Ensure iCloud Drive Document and Desktop Sync Is Disabled. (Automated)
   - id: 18508
     title: "Ensure iCloud Drive Document and Desktop Sync Is Disabled."
     description: "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability. The storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well. Enterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files. The automatic synchronization of all files in a user's Desktop and Documents folders should be disabled. https://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/."
     rationale: "Automated Document synchronization should be planned and controlled to approved storage."
     impact: "Users will not be able to use iCloud for the automatic sync of the Desktop and Documents folders."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowCloudDesktopAndDocuments 3. The key must be set to <false/>."
     references:
       - 'https://developer.apple.com/documentation/devicemanagement/restrictions'
     compliance:
       - cis: ["2.1.1.3"]
       - cis_csc_v8: ["4.1", "4.8", "15.3"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["AC-20(1)", "AC-20(2)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "12.8.5", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.1.1.4 Audit Security Keys Used With AppleIDs. (Manual)
   - id: 18509
     title: "Audit Security Keys Used With AppleIDs."
     description: "Apple has introduced the capability of using security keys to protect AppleIDs using two-factor authentication in macOS Ventura 13.2 and in iOS 16.3 and iPadOS 16.3. This feature along with the purchase of two hardware tokens (a backup device is required) protects against the compromise of AppleIDs. This feature requires all devices using an enrolled Apple ID to meet the minimum OS standard."
     rationale: "Users of Apple devices are supported across their devices by using the same Apple ID to support shard data in both iCloud and across devices. Compromising an AppleID has become a very attractive target for attackers to gain unauthorized access to iCloud storage and user devices. Two-factor authentication reduces the risk."
     impact: "Legacy devices and test machines will be challenging to ensure that they are all running recent Operating Systems that can utilize Security Keys. It is best practice not to use AppleIDs with access to current user data on legacy and test machines. Technical staff that use legacy devices are encouraged to create additional Apple IDs that do not need two-factor protection and can be used for testing on legacy devices when required."
     remediation: "Graphical Method: Perform the following steps to set Security Keys is set to your organization's requirements: 1. Open System Settings 2. Select Apple ID 3. Select Password & Security 4. Select Add.. to add a security key, or Remove All Security Keys ro remove security keys, to meet your organization's requirements."
     references:
       - 'https://support.apple.com/en-us/HT213154'
       - 'https://9to5mac.com/2023/02/03/ios-16-3-hardware-security-keys-explained-'
       - 'https://hcsonline.com/images/Security_Key_Apple_ID.pdf'
     compliance:
       - cis: ["2.1.1.4"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 2.1.2 Audit App Store Password Settings. (Manual)
   - id: 18510
     title: "Audit App Store Password Settings."
     description: "With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a 15-minute grace period, and whether or not to require a password for free purchases. The response to this setting is stored in a cookie and processed by iCloud. There is plenty of risk information on the wisdom of this setting for parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users who are not authorized to download software may have physical access to an unlocked computer where someone who is authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store access in the Password Settings controls."
     rationale: ""
     remediation: "Graphical Method: Perform the following steps to set App Store Passwords to your organization's requirements: 1. Open System Settings 2. Select Apple ID 3. Select Media & Purchases 4. Set Free Downloads to your organization's requirements 5. Set Purchases and In-App Purchases to your organization's requirements."
     compliance:
       - cis: ["2.1.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.2.1 Ensure Firewall Is Enabled. (Automated)
   - id: 18511
     title: "Ensure Firewall Is Enabled."
     description: "A firewall is a piece of software that blocks unwanted incoming connections to a system. Apple has posted general documentation about the application firewall:."
     rationale: "A firewall minimizes the threat of unauthorized users gaining access to your system while connected to a network or the Internet."
     impact: "The firewall may block legitimate traffic. Applications that are unsigned will require special handling."
     remediation: "Graphical Method: Perform the following steps to turn the firewall on: 1. Open System Settings 2. Select Network 3. Select Firewall 4. Set Firewall to enabled Terminal Method: Run the following command to enable the firewall: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.alf globalstate -int <value> For the <value>, use either 1, specific services, or 2, essential services only. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.security.firewall 2. The key to include is EnableFirewall 3. The key must be set to <true/>."
     references:
       - 'https://support.apple.com/en-us/guide/security/seca0e83763f/web'
       - 'http://support.apple.com/en-us/HT201642'
     compliance:
       - cis: ["2.2.1"]
       - cis_csc_v8: ["4.1", "4.5", "13.1"]
       - cis_csc_v7: ["5.1", "9.4", "9.5"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L1-3.1.20", "AU.L2-3.3.5", "AU.L2-3.3.6", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "SC.L1-3.13.1", "SC.L2-3.13.6", "SI.L2-3.14.3", "SI.L2-3.14.7"]
       - hipaa: ["164.312(b)"]
       - iso_27001-2013: ["A.13.1.1", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["AU-6(1)", "AU-7", "CM-7(1)", "CM-9", "IR-4(1)", "SA-10", "SC-7(5)", "SI-4(2)", "SI-4(5)"]
       - pci_dss_v3.2.1: ["1.1.4", "1.4", "10.5.3", "10.6.1", "11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "10.7", "10.7.1", "10.7.2", "10.7.3", "11.5", "2.1.1", "2.2.1"]
       - soc_2: ["CC6.6", "CC7.1", "CC7.2", "CC8.1"]
     condition:
     rules:

  # 2.2.2 Ensure Firewall Stealth Mode Is Enabled. (Automated)
   - id: 18512
     title: "Ensure Firewall Stealth Mode Is Enabled."
     description: "While in Stealth mode, the computer will not respond to unsolicited probes, dropping that traffic."
     rationale: "Stealth mode on the firewall minimizes the threat of system discovery tools while connected to a network or the Internet."
     impact: "Traditional network discovery tools like ping will not succeed. Other network tools that measure activity and approved applications will work as expected. This control aligns with the primary macOS use case of a laptop that is often connected to untrusted networks where host segregation may be non-existent. In that use case, hiding from the other inmates is likely more than desirable. In use cases where use is only on trusted LANs with static IP addresses, stealth mode may not be desirable."
     remediation: "Graphical Method: Perform the following steps to enable firewall stealth mode: 1. Open System Settings 2. Select Network 3. Select Firewall 4. Select Options... 5. Set Enabled stealth mode to enabled Terminal Method: Run the following command to enable stealth mode: $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw -- setstealthmode on Stealth mode enabled Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.security.firewall 2. The key to include is EnableStealthMode 3. The key must be set to <true/> Note: This key must be set in the same configuration profile with EnableFirewall set to <true/>. If it is set in its own configuration profile, it will fail."
     references:
       - 'http://support.apple.com/en-us/HT201642'
     compliance:
       - cis: ["2.2.2"]
       - cis_csc_v8: ["4.1", "4.5", "4.8"]
       - cis_csc_v7: ["5.1", "9.4"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L1-3.1.20", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L1-3.13.1", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.1", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10", "SC-7(5)"]
       - pci_dss_v3.2.1: ["1.1.4", "1.1.6", "1.2.1", "1.4", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.1.1 Ensure AirDrop Is Disabled When Not Actively Transferring Files. (Automated)
   - id: 18513
     title: "Ensure AirDrop Is Disabled When Not Actively Transferring Files."
     description: "AirDrop is Apple's built-in, on-demand, ad hoc file exchange system that is compatible with both macOS and iOS. It uses Bluetooth LE for discovery that limits connectivity to Mac or iOS users that are in close proximity. Depending on the setting, it allows everyone or only Contacts to share files when they are near each other. In many ways, this technology is far superior to the alternatives. The file transfer is done over a TLS encrypted session, does not require any open ports that are required for file sharing, does not leave file copies on email servers or within cloud storage, and allows for the service to be mitigated so that only people already trusted and added to contacts can interact with you. While there are positives to AirDrop, there are privacy concerns that could expose personal information. For that reason, AirDrop should be disabled, and should only be enabled when needed and disabled afterwards. The recommendation against enabling the sharing is not based on any known lack of security in the protocol, but for specific user operational concerns. - - If AirDrop is enabled, the Mac is advertising that a Mac is addressable on the local network and open to either unwanted AirDrop upload requests or for a negotiation on whether the remote user is in the user's contacts list. Neither process is desirable. In most known use cases, AirDrop use qualifies as ad hoc networking when it involves Apple device users deciding to exchange a file using the service. AirDrop can thus be enabled on the fly for that exchange. For organizations concerned about any use of AirDrop because of Digital Loss Prevention (DLP) monitoring on other protocols, JAMF has an article on reviewing AirDrop logs. Detecting outbound AirDrop transfers and logging them."
     rationale: "AirDrop can allow malicious files to be downloaded from unknown sources. Contacts Only limits may expose personal information to devices in the same area."
     impact: "Disabling AirDrop can limit the ability to move files quickly over the network without using file shares."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowAirDrop 3. The key must be set to <false/>."
     references:
       - 'https://www.techrepublic.com/article/apple-airdrop-users-reportedly-vulnerable-'
       - 'https://www.imore.com/how-apple-keeps-your-airdrop-files-private-and-secure'
       - 'https://en.wikipedia.org/wiki/AirDrop'
       - 'https://macmost.com/10-reasons-you-should-be-using-airdrop-to-transfer-'
     compliance:
       - cis: ["2.3.1.1"]
       - cis_csc_v8: ["4.1", "4.8", "6.7"]
       - cis_csc_v7: ["5.1", "15.4"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["AC-2(1)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.1.2 Ensure AirPlay Receiver Is Disabled. (Automated)
   - id: 18514
     title: "Ensure AirPlay Receiver Is Disabled."
     description: "In macOS Monterey (12.0), Apple has added the capability to share content from another Apple device to the screen of a host Mac. While there are many valuable uses of this capability, such sharing on a standard Mac user workstation should be enabled ad hoc as required rather than allowing a continuous sharing service. The feature can be restricted by Apple ID or network and is configured to use by accepting the connection on the Mac. Part of the concern is frequent connection requests may function as a denial-of-service and access control limits may provide too much information to an attacker. https://macmost.com/how-to-use-a-mac-as-an-airplay-receiver.html https://support.apple.com/guide/mac-pro-rack/use-airplay-apdf1417128d/mac."
     rationale: "This capability appears very useful for kiosk and shared work spaces. The ability to allow by network could be especially useful on segregated guest networks where visitors could share their screens on computers with bigger monitors, including computers connected to projectors."
     impact: "Turning off AirPlay sharing by default will not allow users to share without turning the service on. The service should be enable as needed rather than left on."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowAirPlayIncomingRequests 3. The key must be set to <false/> Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     compliance:
       - cis: ["2.3.1.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.2.1 Ensure Set Time and Date Automatically Is Enabled. (Automated)
   - id: 18515
     title: "Ensure Set Time and Date Automatically Is Enabled."
     description: "Correct date and time settings are required for authentication protocols, file creation, modification dates, and log entries. Note: If your organization has internal time servers, enter them here. Enterprise mobile devices may need to use a mix of internal and external time servers. If multiple servers are required, use the Date & Time System Preference with each server separated by a space. Additional Note: The default Apple time server is time.apple.com. Variations include time.euro.apple.com. While it is certainly more efficient to use internal time servers, there is no reason to block access to global Apple time servers or to add a time.apple.com alias to internal DNS records. There are no reports that Apple gathers any information from NTP synchronization, as the computers already phone home to Apple for Apple services including iCloud use and software updates. Best practice is to allow DNS resolution to an authoritative time service for time.apple.com, preferably to connect to Apple servers, but local servers are acceptable as well."
     rationale: "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. This in turn can affect Apple's single sign-on feature, Active Directory logons, and other features."
     impact: "The timed service will periodically synchronize with named time servers and will make the computer time more accurate."
     remediation: "Graphical Method: Perform the following to enable the date and time to be set automatically: 1. Open System Settings 2. Select General 3. Select Date & Time 4. Set Set time and date automatically to enabled Note: By default, the operating system will use time.apple.com as the time server. You can change to any time server that meets your organization's requirements. Terminal Method: Run the following commands to enable the date and time setting automatically: $ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver <your.time.server> setNetworkTimeServer: <your.time.server> $ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on setUsingNetworkTime: On example: $ /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver time.apple.com setNetworkTimeServer: time.apple.com $ /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on setUsingNetworkTime: On Run the following commands if you have not set, or need to set, a new time zone: $ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones $ /usr/bin/sudo /usr/sbin/systemsetup -settimezone <selected time zone> example: $ /usr/bin/sudo /usr/sbin/systemsetup -listtimezones Time Zones: Africa/Abidjan Africa/Accra Africa/Addis_Ababa ... $ /usr/bin/sudo /usr/sbin/systemsetup -settimezone America/New_York Set TimeZone: America/New_York."
     compliance:
       - cis: ["2.3.2.1"]
       - cis_csc_v8: ["8.4"]
       - cis_csc_v7: ["6.1"]
       - cmmc_v2.0: ["AU.L2-3.3.7"]
       - iso_27001-2013: ["A.12.4.4"]
       - nist_sp_800-53: ["AU-7"]
       - pci_dss_v3.2.1: ["10.4"]
       - pci_dss_v4.0: ["10.6", "10.6.1", "10.6.2", "10.6.3"]
       - soc_2: ["CC4.1", "CC5.2"]
     condition:
     rules:

  # 2.3.2.2 Ensure Time Is Set Within Appropriate Limits. (Automated)
   - id: 18516
     title: "Ensure Time Is Set Within Appropriate Limits."
     description: "Correct date and time settings are required for authentication protocols, file creation, modification dates and log entries. Ensure that time on the computer is within acceptable limits. Truly accurate time is measured within milliseconds. For this audit, a drift under four and a half minutes passes the control check. Since Kerberos is one of the important features of macOS integration into Directory systems, the guidance here is to warn you before there could be an impact to operations. From the perspective of accurate time, this check is not strict, so it may be too great for your organization. Your organization can adjust to a smaller offset value as needed. If there are consistent drift issues on the OS, some of the most common drift issues should be investigated: - The chosen time server is not reachable based on network firewall rules on the current network - The computer is offline often and the battery drains, and the network is not immediately available - The chosen time server is a special internal or non-public time server that does not provide a reliable time source Note: ntpdate has been deprecated with 10.14. sntp replaces that command."
     rationale: "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. This in turn can affect Apple's single sign-on feature, Active Directory logons, and other features. Audit check is for more than 4 minutes and 30 seconds ahead or behind."
     impact: "Accurate time is required for many computer functions."
     remediation: "Terminal Method: Run the following commands to ensure your time is set within an appropriate limit: $ /usr/bin/sudo /usr/sbin/systemsetup -getnetworktimeserver The output will include Network Time Server: and the name of your time server example: Network Time Server: time.apple.com. $ /usr/bin/sudo /usr/bin/sntp -sS <your.time.server> example: $ /usr/bin/sudo /usr/sbin/systemsetup -getnetworktimeserver Network Time Server: time.apple.com $ /usr/bin/sudo /usr/bin/sntp -sS time.apple.com."
     compliance:
       - cis: ["2.3.2.2"]
       - cis_csc_v8: ["8.4"]
       - cis_csc_v7: ["6.1"]
       - cmmc_v2.0: ["AU.L2-3.3.7"]
       - iso_27001-2013: ["A.12.4.4"]
       - nist_sp_800-53: ["AU-7"]
       - pci_dss_v3.2.1: ["10.4"]
       - pci_dss_v4.0: ["10.6", "10.6.1", "10.6.2", "10.6.3"]
       - soc_2: ["CC4.1", "CC5.2"]
     condition:
     rules:

  # 2.3.3.1 Ensure DVD or CD Sharing Is Disabled. (Automated)
   - id: 18517
     title: "Ensure DVD or CD Sharing Is Disabled."
     description: "DVD or CD Sharing allows users to remotely access the system's optical drive. While Apple does not ship Macs with built-in optical drives any longer, external optical drives are still recognized when they are connected. In testing, the sharing of an external optical drive persists when a drive is reconnected."
     rationale: "Disabling DVD or CD Sharing minimizes the risk of an attacker using the optical drive as a vector for attack and exposure of sensitive data."
     impact: "Many Apple devices are now sold without optical drives, however drive sharing may be needed for legacy optical media. The media should be explicitly re-shared as needed rather than using a persistent share. Optical drives should not be used for long-term storage. To store necessary data from an optical drive it should be copied to another form of external storage. Optionally, an image can be made of the optical drive so that it is stored in its original form on another form of external storage."
     remediation: "Graphical Method: Perform the following steps to disable DVD or CD Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set DVD or CD sharing to disabled Terminal Method: Run the following command to disable DVD or CD Sharing: $ /usr/bin/sudo /bin/launchctl disable system/com.apple.ODSAgent Note: If using the Terminal method, the GUI will still show the service checked until after a reboot."
     compliance:
       - cis: ["2.3.3.1"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.2 Ensure Screen Sharing Is Disabled. (Automated)
   - id: 18518
     title: "Ensure Screen Sharing Is Disabled."
     description: "Screen Sharing allows a computer to connect to another computer on a network and display the computer’s screen. While sharing the computer’s screen, the user can control what happens on that computer, such as opening documents or applications, opening, moving, or closing windows, and even shutting down the computer. While mature administration and management does not use graphical connections for standard maintenance, most help desks have capabilities to assist users in performing their work when they have technical issues and need support. Help desks use graphical remote tools to understand what the user sees and assist them so they can get back to work. For MacOS, some of these remote capabilities can use Apple's OS tools. Control is therefore not meant to prohibit the use of a just-in-time graphical view from authorized personnel with authentication controls. Sharing should not be enabled except in narrow windows when help desk support is required. Screen Sharing on macOS can allow the use of the insecure VNC protocol. VNC is a clear text protocol that should not be used on macOS."
     rationale: "Disabling Screen Sharing mitigates the risk of remote connections being made without the user of the console knowing that they are sharing the computer."
     impact: "Help desks may require the periodic use of a graphical connection mechanism to assist users. Any support that relies on native MacOS components will not work unless a scripted solution to enable and disable sharing as neccessary."
     remediation: "Graphical Method: Perform the following steps to disable Screen Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Screen Sharing to disabled Terminal Method: Run the following command to turn off Screen Sharing: $ /usr/bin/sudo /bin/launchctl disable system/com.apple.screensharing."
     references:
       - 'https://support.apple.com/guide/mac-help/turn-screen-sharing-on-or-off-'
     compliance:
       - cis: ["2.3.3.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.3 Ensure File Sharing Is Disabled. (Automated)
   - id: 18519
     title: "Ensure File Sharing Is Disabled."
     description: "File sharing from a user workstation creates additional risks, such as: - Open ports are created that can be probed and attacked - Passwords are attached to user accounts for access that may be exposed and endanger other parts of the organizational environment, including directory accounts Increased complexity makes security more difficult and may expose additional attack vectors - Apple's File Sharing uses the Server Message Block (SMB) protocol to share to other computers that can mount SMB shares. This includes other macOS computers. Apple warns that SMB sharing stored passwords is less secure, and anyone with system access can gain access to the password for that account. When sharing with SMB, each user accessing the Mac must have SMB enabled. Storing passwords, especially copies of valid directory passwords, decreases security for the directory account and should not be used."
     rationale: "By disabling File Sharing, the remote attack surface and risk of unauthorized access to files stored on the system is reduced."
     impact: "File Sharing can be used to share documents with other users, but hardened servers should be used rather than user endpoints. Turning on File Sharing increases the visibility and attack surface of a system unnecessarily."
     remediation: "Graphical Method: Perform the following steps to disable File Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set File Sharing to disabled Terminal Method: Run the following command to disable File Sharing: $ /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd."
     compliance:
       - cis: ["2.3.3.3"]
       - cis_csc_v8: ["4.1", "4.8", "5.4"]
       - cis_csc_v7: ["4.3", "5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.5", "AC.L2-3.1.6", "AC.L2-3.1.7", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.3", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3", "A.9.2.3"]
       - nist_sp_800-53: ["AC-6(2)", "AC-6(5)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5", "7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.1", "CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.4 Ensure Printer Sharing Is Disabled. (Automated)
   - id: 18520
     title: "Ensure Printer Sharing Is Disabled."
     description: "By enabling Printer Sharing, the computer is set up as a print server to accept print jobs from other computers. Dedicated print servers or direct IP printing should be used instead."
     rationale: "Disabling Printer Sharing mitigates the risk of attackers attempting to exploit the print server to gain access to the system."
     remediation: "Graphical Method: Perform the following steps to disable Printer Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Printer Sharing to disabled Terminal Method: Run the following command to disable Printer Sharing: $ /usr/bin/sudo /usr/sbin/cupsctl --no-share-printers."
     compliance:
       - cis: ["2.3.3.4"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.5 Ensure Remote Login Is Disabled. (Automated)
   - id: 18521
     title: "Ensure Remote Login Is Disabled."
     description: "Remote Login allows an interactive terminal connection to a computer."
     rationale: "Disabling Remote Login mitigates the risk of an unauthorized person gaining access to the system via Secure Shell (SSH). While SSH is an industry standard to connect to posix servers, the scope of the benchmark is for Apple macOS clients, not servers. macOS does have an IP-based firewall available (pf, ipfw has been deprecated) that is not enabled or configured. There are more details and links in the Network sub-section. macOS no longer has TCP Wrappers support built in and does not have strong Brute-Force password guessing mitigations, or frequent patching of openssh by Apple. Since most macOS computers are mobile workstations, managing IP-based firewall rules on mobile devices can be very resource intensive. All of these factors can be parts of running a hardened SSH server."
     impact: "The SSH server built into macOS should not be enabled on a standard user computer, particularly one that changes locations and IP addresses. A standard user that runs local applications, including email, web browser, and productivity tools, should not use the same device as a server. There are Enterprise management toolsets that do utilize SSH. If they are in use, the computer should be locked down to only respond to known, trusted IP addresses and appropriate administrator service accounts. For macOS computers that are being used for specialized functions, there are several options to harden the SSH server to protect against unauthorized access, including brute force attacks. There are some basic criteria that need to be considered: - Do not open an SSH server to the internet without controls in place to mitigate SSH brute force attacks. This is particularly important for systems bound to Directory environments. It is great to have controls in place to protect the system, but if they trigger after the user is already locked out of their account, they are not optimal. If authorization happens after authentication, directory accounts for users that don't even use the system can be locked out. - Do not use SSH key pairs when there is no insight to the security on the client system that will authenticate into the server with a private key. If an attacker gets access to the remote system and can find the key, they may not need a password or a key logger to access the SSH server. - Detailed instructions on hardening an SSH server, if needed, are available in the CIS Linux Benchmarks, but it is beyond the scope of this benchmark."
     remediation: "Perform the following to disable Remote Login: Graphical Method: Perform the following steps to disable Remote Login: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Remote Login to disabled Terminal Method: Run the following command to disable Remote Login: $ /usr/bin/sudo /usr/sbin/systemsetup -setremotelogin off Do you really want to turn remote login off? If you do, you will lose this connection and can only turn it back on locally at the server (yes/no)? Entering yes will disable remote login."
     compliance:
       - cis: ["2.3.3.5"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.6 Ensure Remote Management Is Disabled. (Automated)
   - id: 18522
     title: "Ensure Remote Management Is Disabled."
     description: "Remote Management is the client portion of Apple Remote Desktop (ARD). Remote Management can be used by remote administrators to view the current screen, install software, report on, and generally manage client Macs. The screen sharing options in Remote Management are identical to those in the Screen Sharing section. In fact, only one of the two can be configured. If Remote Management is used, refer to the Screen Sharing section above on issues regard screen sharing. Remote Management should only be enabled when a Directory is in place to manage the accounts with access. Computers will be available on port 5900 on a macOS System and could accept connections from untrusted hosts depending on the configuration, which is a major concern for mobile systems. As with other sharing options, an open port even for authorized management functions can be attacked, and both unauthorized access and Denial-of-Service vulnerabilities could be exploited. If remote management is required, the pf firewall should restrict access only to known, trusted management consoles. Remote management should not be used across the Internet without the use of a VPN tunnel."
     rationale: "Remote Management should only be enabled on trusted networks with strong user controls present in a Directory system. Mobile devices without strict controls are vulnerable to exploit and monitoring."
     impact: "Many organizations utilize ARD for client management."
     remediation: "Graphical Method: Perform the following steps to disable Remote Management: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Remote Management to disabled Terminal Method: Run the following command to disable Remote Management: $ /usr/bin/sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources /kickstart -deactivate -stop Starting... Removed preference to start ARD after reboot. Done."
     compliance:
       - cis: ["2.3.3.6"]
       - cis_csc_v8: ["4.1", "4.8", "5.4"]
       - cis_csc_v7: ["4.3", "9.2", "14.3"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.5", "AC.L2-3.1.6", "AC.L2-3.1.7", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.3", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.1", "A.13.1.3", "A.9.2.3"]
       - nist_sp_800-53: ["AC-6(2)", "AC-6(5)", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5", "7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.1", "CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.7 Ensure Remote Apple Events Is Disabled. (Automated)
   - id: 18523
     title: "Ensure Remote Apple Events Is Disabled."
     description: "Apple Events is a technology that allows one program to communicate with other programs. Remote Apple Events allows a program on one computer to communicate with a program on a different computer."
     rationale: "Disabling Remote Apple Events mitigates the risk of an unauthorized program gaining access to the system."
     impact: "With remote Apple events turned on, an AppleScript program running on another Mac can interact with the local computer."
     remediation: "Graphical Method: Perform the following steps to disable Remote Apple Events: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Remote Apple Events to disabled Terminal Method: Run the following commands to set Remote Apple Events to Off: $ /usr/bin/sudo /usr/sbin/systemsetup -setremoteappleevents off setremoteappleevents: Off."
     compliance:
       - cis: ["2.3.3.7"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.8 Ensure Internet Sharing Is Disabled. (Automated)
   - id: 18524
     title: "Ensure Internet Sharing Is Disabled."
     description: "Internet Sharing uses the open source natd process to share an internet connection with other computers and devices on a local network. This allows the Mac to function as a router and share the connection to other, possibly unauthorized, devices."
     rationale: "Disabling Internet Sharing reduces the remote attack surface of the system."
     impact: "Internet Sharing allows the computer to function as a router and other computers to use it for access. This can expose both the computer itself and the networks it is accessing to unacceptable access from unapproved devices."
     remediation: "Graphical Method: Perform the following steps to disable Internet Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Internet Sharing to disabled Terminal Method: Run the following command to turn off Internet Sharing: $ usr/bin/sudo /usr/bin/defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0 Note: Using the Terminal Method will not be reflected in the GUI, but will disable the underlying service. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.MCX 2. The key to include is forceInternetSharingOff 3. The key must be set to <true/>."
     compliance:
       - cis: ["2.3.3.8"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.9 Ensure Content Caching Is Disabled. (Automated)
   - id: 18525
     title: "Ensure Content Caching Is Disabled."
     description: "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to deploy data from Apple, including software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream. This capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business requirement to manage operational Internet connectivity and bandwidth, user endpoints should not store content and act as a cluster to provision data. Content types supported by Content Caching in macOS."
     rationale: "The main use case for Mac computers is as mobile user endpoints. P2P sharing services should not be enabled on laptops that are using untrusted networks. Content Caching can allow a computer to be a server for local nodes on an untrusted network. While there are certainly logical controls that could be used to mitigate risk, they add to the management complexity. Since the value of the service is in specific use cases, organizations with the use case described above can accept risk as necessary."
     impact: "This setting will adversely affect bandwidth usage between local subnets and the Internet."
     remediation: "Graphical Method: Perform the following steps to disable Content Caching: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Content Caching to disabled Terminal Method: Run the following command to disable Content Caching: $ /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate The output will include Content caching deactivated Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowContentCaching 3. The key must be set to <false/>."
     references:
       - 'https://support.apple.com/guide/mac-help/about-content-caching-mchl9388ba1b/'
       - 'https://support.apple.com/guide/mac-help/set-up-content-caching-on-mac-'
     compliance:
       - cis: ["2.3.3.9"]
       - cis_csc_v8: ["4.8"]
       - cis_csc_v7: ["9.2"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6"]
     condition:
     rules:

  # 2.3.3.10 Ensure Media Sharing Is Disabled. (Automated)
   - id: 18526
     title: "Ensure Media Sharing Is Disabled."
     description: "Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all Apple devices that are signed in with the same Apple ID. This allows users to share downloaded Movies, Music, or TV shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs. With this capability, guest users can also use media downloaded on the computer. The recommended best practice is not to use the computer as a server, but to utilize Apple's cloud storage in order to download and use content stored there if content stored with Apple is used on multiple devices. https://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-mchlp13371337/mac."
     rationale: "Disabling Media Sharing reduces the remote attack surface of the system."
     impact: "Media Sharing allows for pre-downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized devices on the same network media access."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.preferences.sharing.SharingPrefsExtension 2. The key to include is homeSharingUIStatus 3. The key must be set to <integer>0</integer> 4. The key to also include is legacySharingUIStatus 5. The key must be set to <integer>0</integer> 6. The key to also include is mediaSharingUIStatus 7. The key must be set to <integer>0</integer>."
     compliance:
       - cis: ["2.3.3.10"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.11 Ensure Bluetooth Sharing Is Disabled. (Automated)
   - id: 18527
     title: "Ensure Bluetooth Sharing Is Disabled."
     description: "Bluetooth Sharing allows files to be exchanged with Bluetooth-enabled devices."
     rationale: "Disabling Bluetooth Sharing minimizes the risk of an attacker using Bluetooth to remotely attack the system."
     impact: "Control 2.1.1 discusses disabling Bluetooth if no paired devices exist. There is a general expectation that Bluetooth peripherals will be used by most users in Apple's ecosystem. It is possible that sharing is required and Bluetooth peripherals are not. Bluetooth must be enabled if sharing is an acceptable use case."
     remediation: "Graphical Method: Perform the following steps to disable Bluetooth Sharing: 1. Open System Settings 2. Select General 3. Select Sharing 4. Set Bluetooth Sharing to disabled Terminal Method: Run the following command to disable Bluetooth Sharing is disabled: $ /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false $ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false."
     compliance:
       - cis: ["2.3.3.11"]
       - cis_csc_v8: ["3.3", "4.1"]
       - cis_csc_v7: ["4.8", "5.1", "9.2", "14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.12.4.3", "A.13.1.3", "A.14.2.5", "A.8.1.3", "A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6", "CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2", "7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.3.1", "1.5.1", "2.1.1", "2.2.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.3.3.12 Ensure Computer Name Does Not Contain PII or Protected Organizational Information. (Manual)
   - id: 18528
     title: "Ensure Computer Name Does Not Contain PII or Protected Organizational Information."
     description: "If the computer is used in an organization that assigns host names, it is a good idea to change the computer name to the host name. This is more of a best practice than a security measure. If the host name and the computer name are the same, computer support may be able to track problems down more easily. For organizations or for users that self-administer their own computers, it is important to not use sensitive or personal information in computer names. The name of a computer that uses untrusted networks will be exposed at a minimum to the responsible network team of that network. For instance, having your name as your hostname can provide useful knowledge to an attacker monitoring the network you may be connected to. Examples of possibly inappropriate content in computer names include: - User directory account names - Computer directory account names where machine accounts exist - Contact phone numbers - Physical locations of offices or residences - Personal information that can be augmented with Facebook data to assist social engineering attacks Standard naming patterns avoid collisions and mitigate risk for computer users. With mobile devices, using DHCP IP tracking has serious drawbacks; hostname or computer name tracking makes much more sense for those organizations that can implement it. If the computer is using different names for the \"Computer Name\" DNS and Directory environments, it can be difficult to manage Macs in an Enterprise asset inventory."
     rationale: "Part of IT security is having visibility into all of the devices for which an organization is responsible. Without a complete inventory, it is impossible to ensure all security controls are met on all organizational devices. Default macOS naming deconfliction controls can create issues for appropriate management and tracking as well as privacy exposure. By default, the name of a macOS computer is derived from the first user created. If the user has multiple computers or an image is used without an appropriate name change, there will be multiple computers with names derived from the same user for discovery deconfliction. How many \"Ron Colvin's MacBook Pro\" should there be, and are any missing? Local network auto renaming to avoid collisions also allows for the enumeration of local computer names. Computers should not be named after their users, especially on untrusted networks. For social engineering purposes, the computer name should not provide a full name of the user or an identifiable name that might be used to assist in targeted user attacks. A documented plan to better enable a complete device inventory without exposing user or organizational information is part of mature security."
     remediation: "Graphical Method: Perform the following steps to set the computer name: 1. Open System Settings 2. Select General 3. Select Sharing 4. Select Edit... 5. Set Hostname to your organization's parameters."
     references:
       - 'https://support.apple.com/en-ca/guide/mac-help/mchlp1177/mac'
       - 'https://uberagent.com/blog/choosing-macos-computer-names-wisely/'
       - 'https://support.apple.com/en-ca/guide/mac-help/mchlp2322/mac'
     compliance:
       - cis: ["2.3.3.12"]
       - cis_csc_v8: ["1.1"]
       - cis_csc_v7: ["9.1"]
       - cmmc_v2.0: ["CA.L2-3.12.4", "CM.L2-3.4.1"]
       - hipaa: ["164.310(d)(2)(iii)"]
       - iso_27001-2013: ["A.13.1.2"]
       - nist_sp_800-53: ["CM-8(1)"]
       - pci_dss_v3.2.1: ["11.1.1", "2.4", "9.9.1"]
       - pci_dss_v4.0: ["11.2", "11.2.1", "11.2.2", "12.5", "12.5.1", "9.5.1", "9.5.1.1"]
       - soc_2: ["CC3.2", "CC6.1"]
     condition:
     rules:

  # 2.3.4.1 Ensure Backup Automatically is Enabled If Time Machine Is Enabled. (Automated)
   - id: 18529
     title: "Ensure Backup Automatically is Enabled If Time Machine Is Enabled."
     description: "Backup solutions are only effective if the backups run on a regular basis. The time to check for backups is before the hard drive fails or the computer goes missing. In order to simplify the user experience so that backups are more likely to occur, Time Machine should be on and set to Back Up Automatically whenever the target volume is available. Operational staff should ensure that backups complete on a regular basis and the backups are tested to ensure that file restoration from backup is possible when needed. Backup dates are available even when the target volume is not available in the Time Machine plist. SnapshotDates = ( \"2012-08-20 12:10:22 +0000\", \"2013-02-03 23:43:22 +0000\", \"2014-02-19 21:37:21 +0000\", \"2015-02-22 13:07:25 +0000\", \"2016-08-20 14:07:14 +0000\" When the backup volume is connected to the computer, more extensive information is available through tmutil. See man tmutil."
     rationale: "Backups should automatically run whenever the backup drive is available."
     impact: "The backup will run periodically in the background and could have user impact while running."
     remediation: "Graphical Method: Perform the following steps to enable Time Machine automatic backup: 1. Open System Settings 2. Select General 3. Select Time Machine 4. Select Options... 5. Set Back up frequency to Automatically <every hour/every day/every week> Terminal Method: Run the following command to enable automatic backups if Time Machine is enabled: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.TimeMachine.plist AutoBackup -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.MCX.TimeMachine 2. The key to include is AutoBackup 3. The key must be set to."
     compliance:
       - cis: ["2.3.4.1"]
       - cis_csc_v8: ["11.2"]
       - cis_csc_v7: ["10.1"]
       - hipaa: ["164.308(a)(7)(ii)(A)"]
       - iso_27001-2013: ["A.12.3.1"]
       - pci_dss_v3.2.1: ["12.10.1"]
     condition:
     rules:

  # 2.3.4.2 Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled. (Automated)
   - id: 18530
     title: "Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled."
     description: "One of the most important security tools for data protection on macOS is FileVault. With encryption in place, it makes it difficult for an outside party to access your data if they get physical possession of the computer. One very large weakness in data protection with FileVault is the level of protection on backup volumes. If the internal drive is encrypted but the external backup volume that goes home in the same laptop bag is not, it is self-defeating. Apple tries to make this mistake easily avoided by providing a checkbox to enable encryption when setting up a Time Machine backup. Using this option does require some password management, particularly if a large drive is used with multiple computers. A unique, complex password to unlock the drive can be stored in keychains on multiple systems for ease of use. While some portable drives may contain non-sensitive data and encryption may make interoperability with other systems difficult, backup volumes should be protected just like boot volumes."
     rationale: "Backup volumes need to be encrypted."
     remediation: "Graphical Method: Perform the following steps to enable encryption on the Time Machine drive: 1. Open System Settings 2. Select General 3. Select Time Machine 4. Select the unencrypted drive 5. Select - to forget that drive as a destination 6. Select + to add a different drive as the destination 7. Select Set Up Disk... 8. Set Encrypt Backup to enabled 9. Enter a password in the New Password and the same password in the Re-enter Password fields 10. A password hint is required, but it is recommended that you do not use any identifying information for the password Note: In macOS 12.0 Monterey and previous, the existing Time Machine drive could have encryption added without formatting it. This is no longer possible in macOS 13.0 Ventura. If you wish to keep previous backups from the unencrypted volume, you will need to manually move those files over to the new encrypted drive."
     compliance:
       - cis: ["2.3.4.2"]
       - cis_csc_v8: ["3.6", "3.11", "11.3"]
       - cis_csc_v7: ["10.4", "13.6", "14.8"]
       - cmmc_v2.0: ["AC.L2-3.1.19", "IA.L2-3.5.10", "MP.L2-3.8.1", "MP.L2-3.8.9", "SC.L2-3.13.11", "SC.L2-3.13.16"]
       - hipaa: ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"]
       - iso_27001-2013: ["A.10.1.1", "A.12.3.1", "A.6.2.1"]
       - nist_sp_800-53: ["CP-9(8)", "SC-28", "SC-28(1)"]
       - pci_dss_v3.2.1: ["3.4", "3.4.1", "8.2.1", "9.5", "9.5.1"]
       - pci_dss_v4.0: ["3.1.1", "3.3.2", "3.3.3", "3.5.1", "3.5.1.2", "3.5.1.3", "8.3.2"]
       - soc_2: ["A1.2", "CC6.1", "CC6.4", "CC6.7"]
     condition:
     rules:

  # 2.4.1 Ensure Show Wi-Fi status in Menu Bar Is Enabled. (Automated)
   - id: 18531
     title: "Ensure Show Wi-Fi status in Menu Bar Is Enabled."
     description: "The Wi-Fi status in the menu bar indicates if the system's wireless internet capabilities are enabled. If so, the system will scan for available wireless networks in order to connect. At the time of this revision, all computers Apple builds have wireless network capability, which has not always been the case. This control only pertains to systems that have a wireless NIC available. Operating systems running in a virtual environment may not score as expected, either."
     rationale: "Enabling \"Show Wi-Fi status in menu bar\" is a security awareness method that helps mitigate public area wireless exploits by making the user aware of their wireless connectivity status."
     impact: "The user of the system should have a quick check on their wireless network status available."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.controlcenter 2. The key to include is WiFi 3. The key must be set to <integer>18</integer>."
     compliance:
       - cis: ["2.4.1"]
       - cis_csc_v8: ["4.8", "12.6"]
       - cis_csc_v7: ["2", "15.4"]
       - cmmc_v2.0: ["AC.L2-3.1.13", "AC.L2-3.1.17", "CM.L2-3.4.7", "CM.L2-3.4.8", "IA.L1-3.5.2", "SC.L1-3.13.1", "SC.L2-3.13.15", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["SC-23"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.1.1", "2.2.2", "2.2.5", "4.1.1"]
       - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.1", "CC6.3", "CC6.6"]
     condition:
     rules:

  # 2.4.2 Ensure Show Bluetooth Status in Menu Bar Is Enabled. (Automated)
   - id: 18532
     title: "Ensure Show Bluetooth Status in Menu Bar Is Enabled."
     description: "By showing the Bluetooth status in the menu bar, a small Bluetooth icon is placed in the menu bar. This icon quickly shows the status of Bluetooth, and can allow the user to quickly turn Bluetooth on or off."
     rationale: "Enabling \"Show Bluetooth status in menu bar\" is a security awareness method that helps understand the current state of Bluetooth, including whether it is enabled, discoverable, what paired devices exist, and what paired devices are currently active."
     impact: "Bluetooth is a useful wireless tool that has been widely exploited when configured improperly. The user should have insight into the Bluetooth status."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.controlcenter 2. The key to include is Bluetooth 3. The key must be set to <integer>18</integer>."
     compliance:
       - cis: ["2.4.2"]
       - cis_csc_v8: ["4.8", "13.9"]
       - cis_csc_v7: ["9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.20", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2", "1.2.1", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.2.1", "1.2.5", "1.2.6", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6"]
     condition:
     rules:

  # 2.5.1 Audit Siri Settings. (Manual)
   - id: 18533
     title: "Audit Siri Settings."
     description: "With macOS 10.12 Sierra, Apple has introduced Siri from iOS to macOS. While there are data spillage concerns with the use of data-gathering personal assistant software, the risk here does not seem greater in sending queries to Apple through Siri than in sending search terms in a browser to Google or Microsoft. While it is possible that Siri will be used for local actions rather than Internet searches, Siri could, in theory, tell Apple about confidential Programs and Projects that should not be revealed. This appears be a usage edge case. In cases where sensitive or protected data is processed and Siri could expose that information through assisting a user in navigating their machine, it should be disabled. Siri does need to phone home to Apple, so it should not be available from air-gapped networks as part of its requirements. Most of the use case data published has shown that Siri is a tremendous time saver on iOS where multiple screens and menus need to be navigated through. Information like sports scores, weather, movie times, and simple to-do items on existing calendars can be easily found with Siri. None of the standard use cases should be more risky than already approved activity. For information on Apple's privacy policy for Siri, click here."
     rationale: "Where \"normal\" user activity is already limited, Siri use should be controlled as well."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowAssistant 3. Set the key to <true/> or <false/> based on your organization's requirements OR 1. The PayloadType string is com.apple.ironwood.support 2. The key to include is Ironwood Allowed 3. Set the key to <true/> or <false/> based on your organization's requirements."
     references:
       - 'https://support.apple.com/en-us/HT210657'
     compliance:
       - cis: ["2.5.1"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.6.1.1 Ensure Location Services Is Enabled. (Automated)
   - id: 18534
     title: "Ensure Location Services Is Enabled."
     description: "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointments where location information is supplied. Location Services simplify some processes with mobile computers, such as asset management and time or log management. There are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge."
     rationale: "Location Services are helpful in most use cases and can simplify log and time management where computers change time zones."
     remediation: "Graphical Method: Perform the following steps to enable Location Services: 1. Open System Settings 2. Select Privacy & Security 3. Select Location Services 4. Set Location Services to enabled Terminal Method: Run the following command to enable Location Services: $ /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist If the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running: $ /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false $ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd Note: In some use cases, organizations may not want Location Services running. To disable Location Services, System Integrity Protection must be disabled."
     references:
       - 'https://support.apple.com/en-us/HT204690'
     compliance:
       - cis: ["2.6.1.1"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.6.1.2 Ensure Location Services Is in the Menu Bar. (Automated)
   - id: 18535
     title: "Ensure Location Services Is in the Menu Bar."
     description: "This setting provides the user an understanding of the current status of Location Services and which applications are using it."
     rationale: "Apple has fully integrated location services into macOS. Where the computer is currently located is used for Timezones, weather, travel times, geolocation, \"Find my Mac,\" and advertising services. This benchmark recommends that location services are enabled for most users. Many users may have occasions when they do not want to share their current locations, and some users may need to rarely share their locations. The immediate availability of Location Services in the menu bar provides easy access to the current status, which applications are using the service, and a quick shortcut to making changes. This setting provides better user control in managing user privacy."
     impact: "Users may be provided visibility to a setting they cannot control if organizations control Location Services globally by policy."
     remediation: "Graphical Method: Perform the following steps to set whether the location services icon is in the menu bar: 1. Open System Settings 2. Select Privacy & Security 3. Select Location Services 4. Select Details... 5. Set Show location icon in menu bar when System Services request your location to enabled Terminal Method: Run the following commands to set the option of the location services icon being in the menu bar: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.locationmenu.plist ShowSystemServices -bool true."
     compliance:
       - cis: ["2.6.1.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.6.1.3 Audit Location Services Access. (Manual)
   - id: 18536
     title: "Audit Location Services Access."
     description: "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. While Location Services may be very useful, it may not be desirable to allow all applications that can use Location Services to use your location for Internet queries in order to provide tailored content based on your current location. Ensure applications that can use Location Services are authorized and provide that information where the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to supply information on the menu bar when Location Services are used. Safari can deny access from websites or prompt for access. Applications that support Location Services can be individually controlled in the Privacy tab in Security & Privacy under System Preferences. Access should be evaluated to ensure that privacy controls are as expected."
     rationale: "Privacy controls should be monitored for appropriate settings."
     impact: "Many macOS features rely on Location Services for tailored information. Users expect their time zone and weather to be relevant to where they are without manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility locations are not public, location information should be tightly controlled."
     remediation: "Graphical Method: Perform the following steps to disable unnecessary applications from accessing Location Services: 1. Open System Settings 2. Select Privacy & Security 3. Select Location Services 4. Set any applications listed to your organization's requirements Perform the following steps to set websites to ask for permission to access Location Services: 1. Open Safari 2. Select Safari from the menu bar 3. Select Settings 4. Select Websites 5. Select Location 6. Set When visiting other websites to your organization's requirements."
     compliance:
       - cis: ["2.6.1.3"]
       - cis_csc_v8: ["2.3", "4.1"]
       - cis_csc_v7: ["2.6", "5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.5.1", "A.12.6.2", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-10", "CM-7(1)", "CM-7(2)", "CM-8(3)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "12.3.4", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.6.2 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled. (Automated)
   - id: 18537
     title: "Ensure Sending Diagnostic and Usage Data to Apple Is Disabled."
     description: "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing. Share Mac Analytics (Share with App Developers dependent on Mac Analytic sharing) - Includes diagnostics, usage and location data Share iCloud Analytics - Includes iCloud data and usage information."
     rationale: "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowDiagnosticSubmission 3. The key must be set to <false/> 4. There must also be a second PayloadType string of com.apple.SubmitDiagInfo 5. The key to include is AutoSubmit 6. The key must be set to <false/> 7. There must also be a third PayloadType string of com.apple.assistant.support 8. The key to also include is Siri Data Sharing Opt-In Status 9. The key must be set to <integer>2<integer/>."
     references:
       - 'https://support.apple.com/en-ca/guide/mac-help/mh27990/mac'
     compliance:
       - cis: ["2.6.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.6.3 Ensure Limit Ad Tracking Is Enabled. (Automated)
   - id: 18538
     title: "Ensure Limit Ad Tracking Is Enabled."
     description: "Apple provides a framework that allows advertisers to target Apple users and end-users with advertisements. While many people prefer to see advertising that is relevant to them and their interests, the detailed information that is collected, correlated, and available to advertisers in repositories via data mining is often disconcerting. This information is valuable to both advertisers and attackers, and has been used with other metadata to reveal users' identities. Organizations should manage advertising settings on computers rather than allow users to configure the settings. Apple Information Ad tracking should be limited on 10.15 and prior."
     rationale: "Organizations should manage user privacy settings on managed devices to align with organizational policies and user data protection requirements."
     impact: "Uses will see generic advertising rather than targeted advertising. Apple warns that this will reduce the number of relevant ads."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowApplePersonalizedAdvertising 3. The key must be set to <false/>."
     compliance:
       - cis: ["2.6.3"]
       - cis_csc_v8: ["4.8"]
       - cis_csc_v7: ["9.2"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6"]
     condition:
     rules:

  # 2.6.4 Ensure Gatekeeper Is Enabled. (Automated)
   - id: 18539
     title: "Ensure Gatekeeper Is Enabled."
     description: "Gatekeeper is Apple’s application that utilizes allowlisting to restrict downloaded applications from launching. It functions as a control to limit applications from unverified sources from running without authorization. In an update to Gatekeeper in macOS 13 Ventura, Gatekeeper checks every application on every launch, not just quarantined apps."
     rationale: "Disallowing unsigned software will reduce the risk of unauthorized or malicious applications from running on the system."
     remediation: "Graphical Method: Perform the following steps to enable Gatekeeper: 1. Open System Settings 2. Select Privacy & Security 3. Set 'Allow apps downloaded from' to 'App Store and identified developers' Terminal Method: Run the following command to enable Gatekeeper to allow applications from App Store and identified developers: $ /usr/bin/sudo /usr/sbin/spctl --master-enable Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.systempolicy.control 2. The key to include is AllowIdentifiedDevelopers 3. The key must be set to <true/> 4. The key to also include is EnableAssessment 5. The key must be set to <true/>."
     compliance:
       - cis: ["2.6.4"]
       - cis_csc_v8: ["10.1", "10.2", "10.5"]
       - cis_csc_v7: ["8.2", "8.4"]
       - cmmc_v2.0: ["SI.L1-3.14.2", "SI.L1-3.14.4"]
       - hipaa: ["164.308(a)(5)(ii)(B)"]
       - iso_27001-2013: ["A.12.2.1"]
       - nist_sp_800-53: ["SI-16"]
       - pci_dss_v3.2.1: ["1.4", "11.4", "5.1", "5.1.1", "5.2"]
       - pci_dss_v4.0: ["5.1.1", "5.2.1", "5.2.2", "5.3.1", "5.3.2"]
       - soc_2: ["CC6.8"]
     condition:
     rules:

  # 2.6.5 Ensure FileVault Is Enabled. (Automated)
   - id: 18540
     title: "Ensure FileVault Is Enabled."
     description: "FileVault secures a system's data by automatically encrypting its boot volume and requiring a password or recovery key to access it. FileVault should be used with a saved escrow key to ensure that the owner can decrypt their data if the password is lost. FileVault may also be enabled using command line using the fdesetup command. To use this functionality, consult the Der Flounder blog for more details (see link below under References)."
     rationale: "Encrypting sensitive data minimizes the likelihood of unauthorized users gaining access to it."
     impact: "Mounting a FileVault encrypted volume from an alternate boot source will require a valid password to decrypt it."
     remediation: "Graphical Method: Perform the following steps to enable FileVault: 1. Open System Settings 2. Select Security & Privacy 3. Select Turn On... Note: This will allow you to create a recovery key for FileVault. Keep the key saved securely in case it is needed at a later date. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.MCX 2. The key to include is dontAllowFDEDisable 3. The key must be set to <true/> Note: This profile is required to pass the audit."
     references:
       - 'https://derflounder.wordpress.com/2015/02/02/managing-yosemites-filevault-2-'
       - 'https://derflounder.wordpress.com/2019/01/15/unlock-or-decrypt-your-filevault-'
       - 'https://derflounder.wordpress.com/2021/10/29/use-of-filevault-institutional-'
     compliance:
       - cis: ["2.6.5"]
       - cis_csc_v8: ["3.6", "3.11"]
       - cis_csc_v7: ["13.6", "14.8"]
       - cmmc_v2.0: ["AC.L2-3.1.19", "IA.L2-3.5.10", "MP.L2-3.8.1", "SC.L2-3.13.11", "SC.L2-3.13.16"]
       - hipaa: ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"]
       - iso_27001-2013: ["A.10.1.1", "A.6.2.1"]
       - nist_sp_800-53: ["SC-28", "SC-28(1)"]
       - pci_dss_v3.2.1: ["3.4", "3.4.1", "8.2.1"]
       - pci_dss_v4.0: ["3.1.1", "3.3.2", "3.3.3", "3.5.1", "3.5.1.2", "3.5.1.3", "8.3.2"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 2.6.6 Audit Lockdown Mode. (Manual)
   - id: 18541
     title: "Audit Lockdown Mode."
     description: "Apple introduced Lockdown Mode as a security feature in their 2022 OS releases that provides additional security protection Apple describes as extreme. Users and organizations that suspect some users are targets of advanced attacks must consider using this control. When lockdown mode is enabled, specific trusted websites can be excluded from Lockdown protection if necessary."
     rationale: "Lockdown Mode was designed by Apple as an aggressive approach to commonly attacked OS features where additional controls could reduce the attack surface. IT systems and devices, including their users, are subject to continuous exploit attempts. Most of that activity is not from an advanced attacker and can be considered background noise to a patched, hardened device. Advanced attackers are of more concern and a risk review to understand organizational targets and use Lockdown Mode where appropriate is necessary."
     impact: "Lockdown Mode must be tested appropriately for real-world impact on users prior to use. As a new feature there is not sufficient technical reporting on user impacts."
     remediation: "Graphical Method: Perform the following steps to set Lockdown Mode to your organization's requirements: 1. Open System Settings 2. Select Privacy & Security 3. Set Lockdown Mode to your organization's parameters."
     references:
       - 'https://support.apple.com/en-us/HT212650'
       - 'https://www.lifewire.com/use-lockdown-mode-on-mac-6454923'
     compliance:
       - cis: ["2.6.6"]
       - cis_csc_v8: ["4.6"]
       - cis_csc_v7: ["16.2"]
       - cmmc_v2.0: ["SC.L2-3.13.15"]
       - soc_2: ["CC5.2"]
     condition:
     rules:

  # 2.6.7 Ensure an Administrator Password Is Required to Access System-Wide Preferences. (Automated)
   - id: 18542
     title: "Ensure an Administrator Password Is Required to Access System-Wide Preferences."
     description: "System Preferences controls system and user settings on a macOS Computer. System Preferences allows the user to tailor their experience on the computer as well as allowing the System Administrator to configure global security settings. Some of the settings should only be altered by the person responsible for the computer."
     rationale: "By requiring a password to unlock system-wide System Preferences, the risk of a user changing configurations that affect the entire system is mitigated and requires an admin user to re-authenticate to make changes."
     impact: "Users will need to enter their password to unlock some additional preference panes that are unlocked by default like Network, Startup and Printers & Scanners."
     compliance:
       - cis: ["2.6.7"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.7.1 Ensure Screen Saver Corners Are Secure. (Automated)
   - id: 18543
     title: "Ensure Screen Saver Corners Are Secure."
     description: "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen."
     rationale: "Setting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.dock 2. The key to include is Forced 3. The key must be set to the following: <array> <dict> <key>mcx_preference_settings</key> <dict> <key>wvous-bl-corner</key> <integer><≠6></integer> <key>wvous-br-corner</key> <integer><≠6></integer> <key>wvous-tl-corner</key> <integer><≠6></integer> <key>wvous-tr-corner</key> <integer><≠6></integer> </dict> </dict> </array>."
     compliance:
       - cis: ["2.7.1"]
       - cis_csc_v8: ["4.3"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L2-3.1.10", "AC.L2-3.1.11"]
       - hipaa: ["164.312(a)(2)(iii)"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["AC-11", "AC-11(1)", "AC-12", "AC-2(5)"]
       - pci_dss_v3.2.1: ["8.1.8"]
       - pci_dss_v4.0: ["8.2.8"]
     condition:
     rules:

  # 2.8.1 Audit Universal Control Settings. (Manual)
   - id: 18544
     title: "Audit Universal Control Settings."
     description: "Universal Control is an Apple feature that allows Mac users to control multiple other Macs and iPads with the same keyboard, mouse, and trackpad using the same Apple ID. The technology relies on already available iCloud services, particularly Handoff. Universal Control simplifies the use of iCloud connectivity of multiple computers using the same Apple ID. This may simplify data transfer from organizationally-managed and personal devices. The use of the same iCloud account and Handoff is the underlying concern that should be evaluated. The use of the same keyboard or mouse across multiple devices does not by itself decrease organizational security."
     rationale: "The use of devices together when some are organizational and some are not may complicate device management standards."
     remediation: "Graphical Method: Perform the following steps to set Universal Control to your organization's requirements: 1. Open System Preferences 2. Select Display 3. Select Advanced... 4. Set the options that meet your organization's requirements Terminal Method: Run the following command to enable or disable Universal Control: $ /usr/bin/sudo -u <user> /usr/bin/defaults -currentHost read com.apple.universalcontrol Disable -bool <true/false> $ /usr/bin/sudo -u <user> /usr/bin/defaults -currentHost read com.apple.universalcontrol DisableMagicEdges -bool <true/false> example: $ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read com.apple.universalcontrol Disable -bool true $ /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read com.apple.universalcontrol DisableMagicEdges -bool true $ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost read com.apple.universalcontrol Disable -bool false $ /usr/bin/sudo -u seconduser /usr/bin/defaults -currentHost read com.apple.universalcontrol DisableMagicEdges -bool false Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.universalcontrol 2. The key to include is Disable 3. Set the key to <true/> or <false/> based on your organization's requirements Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     compliance:
       - cis: ["2.8.1"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.9.1.1 Ensure the OS Is Not Active When Resuming from Standby (Intel). (Automated)
   - id: 18545
     title: "Ensure the OS Is Not Active When Resuming from Standby (Intel)."
     description: "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory. https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/ Mac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for \"standbydelay\" is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked. MacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes. MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system. Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs."
     rationale: "To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping."
     impact: "The laptop will take additional time to resume normal operation then if only sleeping rather than hibernating. Setting hibernatemode to 25 will disable the \"always-on\" feature of the Apple Silicon Macs."
     remediation: "Terminal Method: Run the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby: $ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value≤900> $ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value≤900> $ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value≥90> $ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1 $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25 example: $ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500 $ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500 $ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100 $ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1 $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25."
     references:
       - 'https://www.lifewire.com/change-mac-sleep-settings-2260804'
       - 'https://www.zdziarski.com/blog/?p=6705'
       - 'https://www.howtogeek.com/260478/how-to-choose-when-your-mac-hibernates-'
     compliance:
       - cis: ["2.9.1.1"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.9.1.2 Ensure the OS Is Not Active When Resuming from Sleep and Display Sleep (Apple Silicon). (Automated)
   - id: 18546
     title: "Ensure the OS Is Not Active When Resuming from Sleep and Display Sleep (Apple Silicon)."
     description: "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory. If an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended. There is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system. https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/ Mac systems should be set to hibernate after sleeping for a risk-acceptable time period. MacBooks should be set so that the sleep is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes. MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system. Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs."
     rationale: "To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping."
     impact: "The laptop will take additional time to resume normal operation then if only sleeping rather than hibernating. Touch ID will not be available when waking from hibernate. Setting hibernatemode to 25 will disable the \"always-on\" feature of the Apple Silicon Macs."
     remediation: "Terminal Method: Run the following command to set the sleep time and hibernate mode: $ /usr/bin/sudo /usr/bin/pmset -a sleep <value≤10> $ /usr/bin/sudo /usr/bin/pmset -a displaysleep <value≤15 & >value of sleep> $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25 Note: Setting hibernate mode will require the user to log into the machine after sleep and disable any wake options. hibernatemode must be set to 25 or it will not force the computer into a pre-boot state. example: $ /usr/bin/sudo /usr/bin/pmset -a sleep 10 $ /usr/bin/sudo /usr/bin/pmset -a displaysleep 15 $ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25."
     references:
       - 'https://www.lifewire.com/change-mac-sleep-settings-2260804'
       - 'https://www.zdziarski.com/blog/?p=6705'
       - 'https://www.howtogeek.com/260478/how-to-choose-when-your-mac-hibernates-'
     compliance:
       - cis: ["2.9.1.2"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.9.1.3 Ensure FileVault is Locked on Sleep. (Automated)
   - id: 18547
     title: "Ensure FileVault is Locked on Sleep."
     description: "Full Disk Encryption (FDE) is a Data-at-Rest (DAR) solution. It ensures that when the data on the drive is not in use it is full encrypted, but it can be decrypted (unlocked) as needed. When a Mac sleeps, the encryption keys remain in memory so that the drive is encrypted but unlocked. There are attacks available to interact with the OS and data on the unlocked drive. FileVault volumes should be locked when not in use to resist attack."
     rationale: "The purpose of DAR is to ensure data is encrypted while at rest. If the volume is always unlocked it is not sufficient."
     impact: "The laptop will require a user to log in with their username and password, not TouchID, into the OS after the FileVault key is destroyed."
     remediation: "Terminal Method: Run the following command to ensure FileVault keys are set to be destroyed on standby: $ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1."
     compliance:
       - cis: ["2.9.1.3"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.9.2 Ensure Power Nap Is Disabled for Intel Macs. (Automated)
   - id: 18548
     title: "Ensure Power Nap Is Disabled for Intel Macs."
     description: "Power Nap allows the system to stay in low power mode, especially while on battery power, and periodically connect to previously known networks with stored credentials for user applications to phone home and get updates. This capability requires FileVault to remain unlocked and the use of previously joined networks to be risk accepted based on the SSID without user input. This control has been updated to check the status on both battery and AC Power. The presence of an electrical outlet does not completely correlate with logical and physical security of the device or available networks."
     rationale: "Disabling this feature mitigates the risk of an attacker remotely waking the system and gaining access. The use of Power Nap adds to the risk of compromised physical and logical security. The user should be able to decrypt FileVault and have the applications download what is required when the computer is actively used. The control to prevent computer sleep has been retired for this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed LANs."
     impact: "Power Nap exists for unattended user application updates like email and social media clients. With Power Nap disabled, the computer will not wake and reconnect to known wireless SSIDs intermittently when slept."
     remediation: "Graphical Method: Perform the following steps to disable Power Nap: Desktop Instructions: 1. Open System Settings 2. Select Energy Saver 3. Set Power Nap to disabled 4. Select UPS (if applicable) 5. Set Power Nap to disabled Laptop Instructions: 1. Open System Settings 2. Select Battery 3. Select Power Adapter (for laptops only) 4. Set Power Nap to disabled 5. Select Battery 6. Set Power Nap to disabled 7. Select UPS (if applicable) 8. Set Power Nap to disabled Terminal Method: Run the following command to disable Power Nap: $ /usr/bin/sudo /usr/bin/pmset -a powernap 0."
     compliance:
       - cis: ["2.9.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.9.3 Ensure Wake for Network Access Is Disabled. (Automated)
   - id: 18549
     title: "Ensure Wake for Network Access Is Disabled."
     description: "This feature allows the computer to take action when the user is not present and the computer is in energy saving mode. These tools require FileVault to remain unlocked and fully rejoin known networks. This macOS feature is meant to allow the computer to resume activity as needed regardless of physical security controls. This feature allows other users to be able to access your computer’s shared resources, such as shared printers or Apple Music playlists, even when your computer is in sleep mode. In a closed network when only authorized devices could wake a computer, it could be valuable to wake computers in order to do management push activity. Where mobile workstations and agents exist, the device will more likely check in to receive updates when already awake. Mobile devices should not be listening for signals on any unmanaged network or where untrusted devices exist that could send wake signals."
     rationale: "Disabling this feature mitigates the risk of an attacker remotely waking the system and gaining access."
     impact: "Management programs like Apple Remote Desktop Administrator use wake-on-LAN to connect with computers. If turned off, such management programs will not be able to wake a computer over the LAN. If the wake-on-LAN feature is needed, do not turn off this feature. The control to prevent computer sleep has been retired for this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed LANs."
     remediation: "Graphical Method: Perform the following steps to disable Wake for network access: Desktop Instructions: 1. Open System Settings 2. Select Energy Saver 3. Set Wake for network access to disabled Laptop Instructions: 1. Open System Settings 2. Select Battery 3. Select Options... 4. Set Wake for network access to Never Terminal Method: Run the following command to disable Wake for network access: $ /usr/bin/sudo /usr/bin/pmset -a womp 0 Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.MCX 2. The key to include is com.apple.EnergySaver.desktop.ACPower 3. The key must be set to: <dict> <key>Wake On LAN</key> <integer>0</integer> <key>Wake On Modem Ring</key> <integer>0</integer> </dict> 4. The key to also include is com.apple.EnergySaver.portable.ACPower 5. The key must be set to: <dict> <key>Wake On LAN</key> <integer>0</integer> <key>Wake On Modem Ring</key> <integer>0</integer> </dict> 6. The key to also include is com.apple.EnergySaver.portable.BatteryPower 7. The key must be set to: <dict> <key>Wake On LAN</key> <integer>0</integer> <key>Wake On Modem Ring</key> <integer>0</integer> </dict> Note: Both Wake on LAN and Wake on Modem Ring need to be set. Only setting Wake On LAN will allow the profile to install but not set any settings. This profile will only apply the setting at installation and is not sticky."
     compliance:
       - cis: ["2.9.3"]
       - cis_csc_v8: ["4.8"]
       - cis_csc_v7: ["9.2"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6"]
     condition:
     rules:

  # 2.10.1 Ensure an Inactivity Interval of 20 Minutes Or Less for the Screen Saver Is Enabled. (Automated)
   - id: 18550
     title: "Ensure an Inactivity Interval of 20 Minutes Or Less for the Screen Saver Is Enabled."
     description: "A locking screen saver is one of the standard security controls to limit access to a computer and the current user's session when the computer is temporarily unused or unattended. In macOS, the screen saver starts after a value is selected in the drop-down menu. 20 minutes or less is an acceptable value. Any value can be selected through the command line or script, but a number that is not reflected in the GUI can be problematic. 20 minutes is the default for new accounts."
     rationale: "Setting an inactivity interval for the screen saver prevents unauthorized persons from viewing a system left unattended for an extensive period of time."
     impact: "If the screen saver is not set, users may leave the computer available for an unauthorized person to access information."
     remediation: "Profile Method: 1. The PayloadType string is com.apple.screensaver 2. The key to include is idleTime 3. The key must be set to <integer><≤1200></integer> Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     compliance:
       - cis: ["2.10.1"]
       - cis_csc_v8: ["4.3"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L2-3.1.10", "AC.L2-3.1.11"]
       - hipaa: ["164.312(a)(2)(iii)"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["AC-11", "AC-11(1)", "AC-12", "AC-2(5)"]
       - pci_dss_v3.2.1: ["8.1.8"]
       - pci_dss_v4.0: ["8.2.8"]
     condition:
     rules:

  # 2.10.2 Ensure Require Password After Screen Saver Begins or Display Is Turned Off Is Enabled for 5 Seconds or Immediately. (Automated)
   - id: 18551
     title: "Ensure Require Password After Screen Saver Begins or Display Is Turned Off Is Enabled for 5 Seconds or Immediately."
     description: "Sleep and screen saver modes are low power modes that reduce electrical consumption while the system is not in use."
     rationale: "Prompting for a password when waking from sleep or screen saver mode mitigates the threat of an unauthorized person gaining access to a system in the user's absence."
     impact: "Without a screenlock in place, anyone with physical access to the computer would be logged in and able to use the active user's session."
     remediation: "Graphical Method: Perform the following steps to enable a password for unlock after a screen saver begins or after sleep: 1. Open System Settings 2. Select Lock Screen 3. Set Require password after screensaver begins or display is turned off to either After 0 seconds or After 5 seconds Terminal Method: Run the following command to require a password to unlock the computer after the screen saver engages or the computer sleeps: $ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock immediate -password <administrator password> or $ /usr/bin/sudo /usr/sbin/sysadminctl -screenLock 5 seconds -password <administrator password> Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.screensaver 2. The key to include is askForPassword 3. The key must be set to <true/> 4. The key to also include is askForPasswordDelay 5. The key must be set to <integer><0,5></integer>."
     references:
       - 'https://blog.kolide.com/screensaver-security-on-macos-10-13-is-broken-'
       - 'https://github.com/rtrouton/profiles/blob/master/SetDefaultScreensaver/SetDefaul'
     compliance:
       - cis: ["2.10.2"]
       - cis_csc_v8: ["4.7"]
       - cis_csc_v7: ["4.2"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v3.2.1: ["2.1", "2.1.1"]
       - pci_dss_v4.0: ["2.2.2", "2.3.1"]
       - soc_2: ["CC6.3"]
     condition:
     rules:

  # 2.10.3 Ensure a Custom Message for the Login Screen Is Enabled. (Automated)
   - id: 18552
     title: "Ensure a Custom Message for the Login Screen Is Enabled."
     description: "An access warning informs the user that the system is reserved for authorized use only, and that the use of the system may be monitored."
     rationale: "An access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements."
     impact: "If users are not informed of their responsibilities, unapproved activities may occur. Users that are not approved for access may take the lack of a warning banner as implied consent to access."
     remediation: "Graphical Method: Perform the following steps to enable a login banner set to your organization's required text: 1. Open System Settings 2. Select Lock Screen 3. Set Show message when locked to enabled 4. Select Set 5. Insert text in the Set a message to appear on the lock screen that matches your organization's required text 6. Select Done Terminal Method: Run the following command to enable a custom login screen message: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText \"<custom message>\" example: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText \"Center for Internet Security Test Message\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.loginwindow 2. The key to include is LoginwindowText 3. The key must be set to <string><Your organization's required text></string>."
     compliance:
       - cis: ["2.10.3"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.10.4 Ensure Login Window Displays as Name and Password Is Enabled. (Automated)
   - id: 18553
     title: "Ensure Login Window Displays as Name and Password Is Enabled."
     description: "The login window prompts a user for his/her credentials, verifies their authorization level, and then allows or denies the user access to the system."
     rationale: "Prompting the user to enter both their username and password makes it twice as hard for unauthorized users to gain access to the system since they must discover two attributes."
     remediation: "Graphical Method: Perform the following steps to ensure the login window display name and password: 1. Open System Settings 2. Select Lock Screen 3. Set 'Login window showstoName and Password` Terminal Method: Run the following command to enable the login window to display name and password: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool true Note: The GUI will not display the updated setting until the current user(s) logs out. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.loginwindow 2. The key to include is SHOWFULLNAME 3. The key must be set to <true/>."
     compliance:
       - cis: ["2.10.4"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.10.5 Ensure Show Password Hints Is Disabled. (Automated)
   - id: 18554
     title: "Ensure Show Password Hints Is Disabled."
     description: "Password hints are user-created text displayed when an incorrect password is used for an account."
     rationale: "Password hints make it easier for unauthorized persons to gain access to systems by displaying information provided by the user to assist in remembering the password. This info could include the password itself or other information that might be readily discerned with basic knowledge of the end user."
     impact: "The user can set the hint to any value, including the password itself or clues that allow trivial social engineering attacks."
     remediation: "Graphical Method: Perform the following steps to disable password hints from being shown: 1. Open System Settings 2. Select Lock Screen 3. Set 'Show password hints` to disabled Terminal Method: Run the following command to disable password hints: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0 Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.loginwindow 2. The key to include is RetriesUntilHint 3. The key must be set to <integer>0</integer>."
     compliance:
       - cis: ["2.10.5"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.11.1 Ensure Users' Accounts Do Not Have a Password Hint. (Automated)
   - id: 18555
     title: "Ensure Users' Accounts Do Not Have a Password Hint."
     description: "Password hints help the user recall their passwords for various systems and/or accounts. In most cases, password hints are simple and closely related to the user's password."
     rationale: "Password hints that are closely related to the user's password are a security vulnerability, especially in the social media age. Unauthorized users are more likely to guess a user's password if there is a password hint. The password hint is very susceptible to social engineering attacks and information exposure on social media networks."
     remediation: "Graphical Method: Perform the following steps to remove a user's password hint: 1. Open System Settings 2. Select Touch ID & Passwords (or Login Password on non-Touch ID Macs) 3. Select Change... 4. Change the password and ensure that no text is entered in the Password hint box Note: This will only change the currently logged-in user's password, and not any others that are not compliant on the Mac. Use the terminal method if multiple users are not in compliance. Terminal Method: Run the following command to remove a user's password hint: $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/<username> hint example: $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/firstuser hint $ /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/seconduser hint."
     compliance:
       - cis: ["2.11.1"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 2.11.2 Audit Touch ID. (Manual)
   - id: 18556
     title: "Audit Touch ID."
     description: "Apple has integrated Touch ID with macOS and allows fingerprint use for many common operations. All use of Touch ID requires the presence of a password and the use of that password after every reboot, or when more than 48 hours has elapsed since the device was last unlocked. Touch ID is not a password replacement. The use of Touch ID can, however, make the use of passwords more secure for authorized users with physical access to a Mac. Normal day-to-day work operations can eliminate the use of console password entry unless a reboot is required other than on Monday morning. The infrequency of password screen unlock can enable a more complicated pass phrase that is seldom used. When Touch ID is used it remediates the risk of shoulder surfing (including video surveillance) to capture console credentials. There have been many reported shoulder surfing password captures on iOS devices. Reports have not been widespread on Macs, but shoulder surfing password capture is simpler than the other methods of breaking in to an encrypted Mac. When a SmartCard or YubiKey is provisioned by an organization and is available for Console authentication, that is a much more secure option than the use of Touch ID and is preferred."
     rationale: "Touch ID allows for an account-enrolled fingerprint to access a key that uses a previously provided password."
     impact: "Touch ID is more convenient for use with aggressive screen lock controls."
     remediation: "Graphical Method: Perform the following steps to set Touch ID to your organization's settings: 1. Open System Settings 2. Select Touch ID & Password 3. Set the Touch ID settings to your organization's requirements Terminal Method: For each user, run the following commands to set TouchID to your organizations paramters: Use this command for TouchID to unlock the system. Use 0 to disable unlock or 1 to enable unlock: $ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u <0,1> Use this command for TouchID to use ApplePay. Use 0 to disable ApplePay or 1 to enable ApplePay: $ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a <0,1> Use this command to set the timeout at the system level: $ /usr/bin/sudo usr/bin/bioutil -w -s -o <value≤172800> example: $ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u 1 $ /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a 1 $ /usr/bin/sudo usr/bin/bioutil -w -s -o 86400 Note: The -s notates a system configuration and does not need to be ran for each user."
     references:
       - 'https://support.apple.com/guide/mac-help/touch-id-mchl16fbf90a/mac'
     compliance:
       - cis: ["2.11.2"]
       - cis_csc_v8: ["4.1", "5.2"]
       - cis_csc_v7: ["4.4", "5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "IA.L2-3.5.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3", "A.9.4.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.12.1 Ensure Guest Account Is Disabled. (Automated)
   - id: 18557
     title: "Ensure Guest Account Is Disabled."
     description: "The guest account allows users access to the system without having to create an account or password. Guest users are unable to make setting changes and cannot remotely login to the system. All files, caches, and passwords created by the guest user are deleted upon logging out."
     rationale: "Disabling the guest account mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system."
     impact: "A guest user can use that access to find out additional information about the system and might be able to use privilege escalation vulnerabilities to establish greater access."
     remediation: "Graphical Method: Perform the following steps to disable guest account availability: 1. Open System Settings 2. Select Users & Groups 3. Select the i next to the Guest User 4. Set Allow guests to log in to this computer to disabled Terminal Method: Run the following command to disable the guest account: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.MCX 2. The key to include is DisableGuestAccount 3. The key must be set to <true/> 4. The key to include is EnableGuestAccount 5. The key must be set to <false/>."
     compliance:
       - cis: ["2.12.1"]
       - cis_csc_v8: ["5.2", "6.2", "6.8"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.4", "AC.L2-3.1.5", "IA.L2-3.5.7", "SC.L2-3.13.3"]
       - hipaa: ["164.308(a)(3)(ii)(B)", "164.308(a)(3)(ii)(C)", "164.308(a)(4)(i)", "164.308(a)(4)(ii)(C)"]
       - iso_27001-2013: ["A.9.4.3"]
       - nist_sp_800-53: ["AC-2(1)", "AC-5", "AC-6", "AC-6(1)", "AC-6(7)", "AU-9(4)"]
       - pci_dss_v3.2.1: ["8.1.3"]
       - pci_dss_v4.0: ["10.3.1", "2.2.2", "7.1", "7.1.1", "7.2", "7.2.1", "7.2.2", "7.2.4", "7.2.6", "7.3", "7.3.1", "7.3.2", "8.2.4", "8.2.5", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC5.2", "CC6.1", "CC6.2", "CC6.3"]
     condition:
     rules:

  # 2.12.2 Ensure Guest Access to Shared Folders Is Disabled. (Automated)
   - id: 18558
     title: "Ensure Guest Access to Shared Folders Is Disabled."
     description: "Allowing guests to connect to shared folders enables users to access selected shared folders and their contents from different computers on a network."
     rationale: "Not allowing guests to connect to shared folders mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system."
     impact: "Unauthorized users could access shared files on the system."
     remediation: "Graphical Method: Perform the following steps to no longer allow guest user access to shared folders: 1. Open System Settings 2. Select Users & Groups 3. Select the i next to the Guest User 4. Set Allow guests to connect to shared folders to disabled Terminal Method: Run the following commands to verify that shared folders are not accessible to guest users: $ /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess off."
     compliance:
       - cis: ["2.12.2"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 2.12.3 Ensure Automatic Login Is Disabled. (Automated)
   - id: 18559
     title: "Ensure Automatic Login Is Disabled."
     description: "The automatic login feature saves a user's system access credentials and bypasses the login screen. Instead, the system automatically loads to the user's desktop screen."
     rationale: "Disabling automatic login decreases the likelihood of an unauthorized person gaining access to a system."
     impact: "If automatic login is not disabled, an unauthorized user could gain access to the system without supplying any credentials."
     remediation: "Graphical Method: Perform the following steps to set automatic login to off: 1. Open System Settings 2. Select Users & Groups 3. Set Automatic login in as... to Off Terminal Method: Run the following command to disable automatic login: $ /usr/bin/sudo /usr/bin/defaults delete /Library/Preferences/com.apple.loginwindow autoLoginUser Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.loginwindow 2. The key to include is com.apple.login.mcx.DisableAutoLoginClient 3. The key must be set to <true/> Note: If both the profile is enabled and a user is set to autologin, the profile will take precedent. In this case, the graphical or terminal remediation method should also be applied in case the profile is ever removed."
     compliance:
       - cis: ["2.12.3"]
       - cis_csc_v8: ["4.7"]
       - cis_csc_v7: ["4.2"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v3.2.1: ["2.1", "2.1.1"]
       - pci_dss_v4.0: ["2.2.2", "2.3.1"]
       - soc_2: ["CC6.3"]
     condition:
     rules:

  # 2.13.1 Audit Passwords System Preference Setting. (Manual)
   - id: 18560
     title: "Audit Passwords System Preference Setting."
     description: "Apple has provided a new interface in macOS Monterey for managing passwords that mirrors the interfaced capability already available in iOS. Password management in macOS was previously available in both Safari Preferences and in Keychain Access. Apple is attempting to simplify password management for macOS and make the user experience more similar to iOS. Organizations are justifiably concerned about the risk of password managers, particularly as a possible backdoor to improved credential management regimes and greater use of Multi-Factor-Authentication (MFA). Apple has information posted on this system preference with additional information. Change Passwords preferences on Mac A warning icon is shown next to a website for any of the following reasons: - Easily guessed - Appeared in a data leak - Reused on another website."
     rationale: "Organizations should remove what passwords can be saved on user computers, thus limiting the ability of attackers to potentially steal organizational credentials. Limits on password storage must be evaluated based on both user risk and Enterprise risk."
     impact: "Organizations using passwords are constantly reported as having their password databases leaked to the Internet so every password a user has should be unique. Locking down secure password management solutions so that it cannot be used pushes users to password reuse, sticky notes, or always open text files with long lists of credentials."
     remediation: "Graphical Method: Perform the following steps to set Password system settings to your organization's settings: 1. Open System Settings 2. Select Passwords 3. Enter the user's password 4. Select the Security Recommendations 5. Remove stored passwords that should not be saved."
     references:
       - 'https://support.apple.com/guide/security/password-monitoring-'
     compliance:
       - cis: ["2.13.1"]
       - cis_csc_v8: ["5.2", "5.6"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - nist_sp_800-53: ["AC-2(1)"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 2.14.1 Audit Game Center Settings. (Manual)
   - id: 18561
     title: "Audit Game Center Settings."
     description: "With macOS 10.13, Apple has introduced a separate section for Game Center in System Settings. It is possible to log in with the Apple ID and use the iCloud-based Game Center services. Game Center is a feature from Apple that allows users to engage in game-related activities with friends when playing multiplayer games online on the Game Center social network. User profile data such as nickname, contact discovery, and also nearby players may be shared through iCloud. Apple collects information here, such as the games users play and when they play them, all scores and achievements, and the challenges users send and receive. This information is used to track users' high scores, achievements, and challenges and to improve Game Center. The automatic sign in to Game Center with AppleID should be disabled if not aligned with organizational rules Personal profile visibility, Finding by Friends, requests from Contacts, Nearby Player detection and Connecting with Friends are all visibility options that should be risk accepted through an organizational policy before use. Users should not sign in to Game Center on organizational managed devices if not covered under acceptable use. For personal devices Game Center should not be signed in if the user is not using Apple's gaming service."
     rationale: "Ensure Game Center service is used consistently with organizational requirements."
     impact: "Game Center is designed as a social network to use Apple's gaming service and includes capabilities to discover players in the service as through local network discovery. If the Apple feature is not needed it should not be on, and should not be signed in."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.applicationaccess 2. The key to include is allowGameCenter 3. The key should be set <true/>, to allow Game Center, or <false/>, to disable it, based on your organization's requirements."
     references:
       - 'https://support.apple.com/en-us/HT210401'
       - 'https://developer.apple.com/documentation/devicemanagement/restrictions'
       - 'https://developer.apple.com/game-center/'
     compliance:
       - cis: ["2.14.1"]
     condition:
     rules:

  # 2.15.1 Audit Notification & Focus Settings. (Manual)
   - id: 18562
     title: "Audit Notification & Focus Settings."
     description: "Notification capabilities are designed to allow users to receive updates from applications that are not currently in use. These can be background applications or even notices from processes running on a computer that is not currently being actively used. Where the screen of a computer is visible to others other than the logged-in user due to shared working spaces or public spaces, consideration should be given to the exposure of sensitive data in notifications. Applications that use the system-wide application service may be individually managed, and applications that might expose confidential information to unauthorized users should not expose notifications except to the current user, especially on the locked screen when the computer may be unattended."
     rationale: "Some work environments will handle sensitive or confidential information with applications that can provide notifications to anyone who can see the computer screen. Organizations must review the likelihood that information may be exposed inappropriately and suppress notifications where risk is not organizationally accepted."
     impact: "Computer users are often juggling too much information through too many applications that want their attention and are often designed to get attention and never let it go. Notifications are a mechanism that can be used to cut through the deluge and allow important issues to be resolved in a timely way. Global controls on limiting user notifications, even for certain applications, could impact productivity and the timely remediation of issues."
     remediation: "Graphical Method: Perform the following steps to set Notifications to your organization's requirements: 1. Open System Settings 2. Select Notifications 3. Select any applications that are not in compliance with your organization's requirements 4. Turn off or mute notifications that may expose information to unauthorized people that might be able to view screens of organizational computers."
     compliance:
       - cis: ["2.15.1"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 2.16.1 Audit Wallet & Apple Pay Settings. (Manual)
   - id: 18563
     title: "Audit Wallet & Apple Pay Settings."
     description: "Touch ID is a prerequisite for using Apple Pay and Wallet on macOS. Apple Pay allows an Apple account holder to enroll their credit cards in Apple Pay and pay enrolled vendors without using the physical card or number. Apple's service eliminates the requirement to send the credit card number itself to the vendor. Apple Pay on a Mac allows the use of credit cards the user has already enrolled and reduces user risk for credit card purchases."
     rationale: "Some environments may have rules around purchases from organizationally managed computers and may want to discourage shopping from them. It is difficult to block access to websites that allow purchases, and Apple Pay has more controls for user protection than the manual entry of credit card information."
     remediation: "Graphical Method: Perform the following steps to set Touch ID to your organization's settings: 1. Open System Settings 2. Select Wallet & Apple Pay 3. Set the Wallet & Apple Pay settings to your organization's requirements."
     references:
       - 'https://www.apple.com/apple-pay/'
       - 'https://support.apple.com/guide/mac-help/use-wallet-apple-pay-on-mac-'
     compliance:
       - cis: ["2.16.1"]
     condition:
     rules:

  # 3.1 Ensure Security Auditing Is Enabled. (Automated)
   - id: 18564
     title: "Ensure Security Auditing Is Enabled."
     description: "macOS's audit facility, auditd, receives notifications from the kernel when certain system calls, such as open, fork, and exit, are made. These notifications are captured and written to an audit log."
     rationale: "Logs generated by auditd may be useful when investigating a security incident as they may help reveal the vulnerable application and the actions taken by a malicious actor."
     remediation: "Terminal Method: Perform the following to enable security auditing: Run the following command to load auditd: $ /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.auditd.plist."
     compliance:
       - cis: ["3.1"]
       - cis_csc_v8: ["8.2", "8.5"]
       - cis_csc_v7: ["4.9", "6.2"]
       - cmmc_v2.0: ["AU.L2-3.3.1"]
       - hipaa: ["164.312(b)"]
       - iso_27001-2013: ["A.12.4.1", "A.9.4.2"]
       - nist_sp_800-53: ["AU-3(1)", "AU-7"]
       - pci_dss_v3.2.1: ["10.1", "10.2", "10.2.2", "10.2.4", "10.2.5", "10.3"]
       - pci_dss_v4.0: ["10.2", "10.2.1", "10.2.1.1", "10.2.1.2", "10.2.1.3", "10.2.1.4", "10.2.1.5", "10.2.1.6", "10.2.1.7", "10.2.2", "5.3.4", "6.4.1", "6.4.2", "9.4.5"]
       - soc_2: ["CC5.2", "CC7.2"]
     condition:
     rules:

  # 3.2 Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements. (Automated)
   - id: 18565
     title: "Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements."
     description: "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements."
     rationale: "Maintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised. Depending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected."
     remediation: "Terminal Method: Perform the following to set the required Security Auditing Flags: Edit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw."
     references:
       - 'https://derflounder.wordpress.com/2012/01/30/openbsm-auditing-on-mac-os-x/'
       - 'https://csrc.nist.gov/CSRC/media/Publications/sp/800-179/rev-'
       - 'https://www.scip.ch/en/?labs.20150108'
       - 'https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-171r2.pdf'
       - 'https://www.whitehouse.gov/wp-content/uploads/2021/08/M-21-31-Improving-'
     compliance:
       - cis: ["3.2"]
       - cis_csc_v8: ["3.14", "8.2", "8.5"]
       - cis_csc_v7: ["6.2", "14.9"]
       - cmmc_v2.0: ["AC.L2-3.1.7", "AU.L2-3.3.1"]
       - hipaa: ["164.312(b)", "164.312(c)(1)", "164.312(c)(2)"]
       - iso_27001-2013: ["A.12.4.1", "A.12.4.3"]
       - nist_sp_800-53: ["AC-6(9)", "AU-3(1)", "AU-7"]
       - pci_dss_v3.2.1: ["10.1", "10.2", "10.2.1", "10.2.2", "10.2.4", "10.2.5", "10.3", "11.5"]
       - pci_dss_v4.0: ["10.2", "10.2.1", "10.2.1.1", "10.2.1.2", "10.2.1.3", "10.2.1.4", "10.2.1.5", "10.2.1.6", "10.2.1.7", "10.2.2", "5.3.4", "6.4.1", "6.4.2", "9.4.5"]
       - soc_2: ["CC5.2", "CC6.1", "CC7.2"]
     condition:
     rules:

  # 3.3 Ensure install.log Is Retained for 365 or More Days and No Maximum Size. (Automated)
   - id: 18566
     title: "Ensure install.log Is Retained for 365 or More Days and No Maximum Size."
     description: "macOS writes information pertaining to system-related events to the file /var/log/install.log and has a configurable retention policy for this file. The default logging setting limits the file size of the logs and the maximum size for all logs. The default allows for an errant application to fill the log files and does not enforce sufficient log retention. The Benchmark recommends a value based on standard use cases. The value should align with local requirements within the organization. The default value has an \"all_max\" file limitation, no reference to a minimum retention, and a less precise rotation argument. The all_max flag control will remove old log entries based only on the size of the log files. Log size can vary widely depending on how verbose installing applications are in their log entries. The decision here is to ensure that logs go back a year, and depending on the applications a size restriction could compromise the ability to store a full year. While this Benchmark is not scoring for a rotation flag, the default rotation is sequential rather than using a timestamp. Auditors may prefer timestamps in order to simply review specific dates where event information is desired. Please review the File Rotation section in the man page for more information. man asl.conf - The maximum file size limitation string should be removed \"all_max=\" - An organization appropriate retention should be added \"ttl=\" - The rotation should be set with timestamps \"rotate=utc\" or \"rotate=local\"."
     rationale: "Archiving and retaining install.log for at least a year is beneficial in the event of an incident as it will allow the user to view the various changes to the system along with the date and time they occurred."
     impact: "Without log files system maintenance and security forensics cannot be properly performed."
     remediation: "Terminal Method: Perform the following to ensure that install logs are retained for at least 365 days: Edit the /etc/asl/com.apple.install file and add or modify the ttl value to 365 or greater on the file line. Also, remove the all_max= setting and value from the file line."
     compliance:
       - cis: ["3.3"]
       - cis_csc_v8: ["8.1", "8.3"]
       - cis_csc_v7: ["6.4", "6.7"]
       - cmmc_v2.0: ["AU.L2-3.3.1"]
       - hipaa: ["164.312(b)"]
       - iso_27001-2013: ["A.12.4.1", "A.12.4.3"]
       - pci_dss_v3.2.1: ["10.7"]
       - pci_dss_v4.0: ["10.1", "10.1.1"]
       - soc_2: ["A1.1"]
     condition:
     rules:

  # 3.4 Ensure Security Auditing Retention Is Enabled. (Automated)
   - id: 18567
     title: "Ensure Security Auditing Retention Is Enabled."
     description: "The macOS audit capability contains important information to investigate security or operational issues. This resource is only completely useful if it is retained long enough to allow technical staff to find the root cause of anomalies in the records. Retention can be set to respect both size and longevity. To retain as much as possible under a certain size, the recommendation is to use the following: expire-after:60d OR 5G This recomendation is based on minimum storage for review and investigation. When a third party tool is in use to allow remote logging or the store and forwarding of logs, this local storage requirement is not required."
     rationale: "The audit records need to be retained long enough to be reviewed as necessary."
     impact: "The recommendation is that at least 60 days or 5 gigabytes of audit records are retained. Systems that have very little remaining disk space may have issues retaining sufficient data."
     remediation: "Terminal Method: Perform the following to set the audit retention length: Edit the /etc/security/audit_control file so that expire-after: is at least 60d OR 5G."
     compliance:
       - cis: ["3.4"]
       - cis_csc_v8: ["8.1", "8.3"]
       - cis_csc_v7: ["6.4", "6.7"]
       - cmmc_v2.0: ["AU.L2-3.3.1"]
       - hipaa: ["164.312(b)"]
       - iso_27001-2013: ["A.12.4.1", "A.12.4.3"]
       - pci_dss_v3.2.1: ["10.7"]
       - pci_dss_v4.0: ["10.1", "10.1.1"]
       - soc_2: ["A1.1"]
     condition:
     rules:

  # 3.5 Ensure Access to Audit Records Is Controlled. (Automated)
   - id: 18568
     title: "Ensure Access to Audit Records Is Controlled."
     description: "The audit system on macOS writes important operational and security information that can be both useful for an attacker and a place for an attacker to attempt to obfuscate unwanted changes that were recorded. As part of defense-in-depth, the /etc/security/audit_control configuration and the files in /var/audit should be owned only by root with group wheel with read-only rights and no other access allowed. macOS ACLs should not be used for these files."
     rationale: "Audit records should never be changed except by the system daemon posting events. Records may be viewed or extracts manipulated, but the authoritative files should be protected from unauthorized changes."
     impact: "This control is only checking the default configuration to ensure that unwanted access to audit records is not available."
     remediation: "Terminal Method: Run the following to commands to set the audit records to the root user and wheel group: $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/audit_control $ /usr/bin/sudo /bin/chmod -R o-rw /etc/security/audit_control $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /var/audit/ $ /usr/bin/sudo /bin/chmod -R o-rw /var/audit/ Note: It is recommended to do a thorough verification process on why the audit logs have been changed before following the remediation steps. If the system has different access controls on the audit logs, and the changes cannot be traced, a new install may be prudent. Check for signs of file tampering as well as unapproved OS changes."
     compliance:
       - cis: ["3.5"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 3.6 Ensure Firewall Logging Is Enabled and Configured. (Automated)
   - id: 18569
     title: "Ensure Firewall Logging Is Enabled and Configured."
     description: "The socketfilter Firewall is what is used when the Firewall is turned on in the Security & Privacy Preference Pane. In order to appropriately monitor what access is allowed and denied, logging must be enabled. The logging level must be set to \"detailed\" to be useful in monitoring connection attempts that the firewall detects. Throttled login is not sufficient for examining Firewall connection attempts. In-depth log monitoring on macOS may require changes to the \"Enable-Private-Data\" key in SystemLogging.System to ensure more complete logging. Reviewing macOS Unified Logs."
     rationale: "In order to troubleshoot the successes and failures of a Firewall, detailed logging should be enabled."
     impact: "Detailed logging may result in excessive storage."
     remediation: "Terminal Method: Run the following command to enable logging of the firewall: $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw -- setloggingmode on Turning on log mode $ /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw -- setloggingopt detail Setting detail log option Note: If the Firewall settings are set through a configuration profile, then modifications cannot be done through the command line. If attempted, you will receive the message Firewall settings cannot be modified from command line on managed Mac computers. Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.security.firewall 2. The key to include is EnableFirewall 3. The key must be set to <true/> 4. The key to also include is EnableLogging 5. The key must be set to <true/> 6. The key to also include is LoggingOption 7. The key must be set to <string>detail</string> Note: Firewall Logging must be enabled with this profile. It can either be set with the Firewall and Stealth Mode (2.5.2.2 and 2.5.2.3) or as a separate profile. Setting logging with its own profile will not cause a conflict."
     references:
       - 'https://developer.apple.com/documentation/devicemanagement/firewall?languag'
     compliance:
       - cis: ["3.6"]
       - cis_csc_v8: ["4.5", "8.2", "8.5"]
       - cis_csc_v7: ["6.2", "6.3", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.20", "AU.L2-3.3.1", "CM.L2-3.4.7", "SC.L1-3.13.1", "SC.L2-3.13.6"]
       - hipaa: ["164.312(b)"]
       - iso_27001-2013: ["A.12.4.1", "A.13.1.3"]
       - nist_sp_800-53: ["AU-3(1)", "AU-7", "SC-7(5)"]
       - pci_dss_v3.2.1: ["1.1.4", "1.4", "10.1", "10.2", "10.2.2", "10.2.4", "10.2.5", "10.3"]
       - pci_dss_v4.0: ["1.2.1", "10.2", "10.2.1", "10.2.1.1", "10.2.1.2", "10.2.1.3", "10.2.1.4", "10.2.1.5", "10.2.1.6", "10.2.1.7", "10.2.2", "5.3.4", "6.4.1", "6.4.2", "9.4.5"]
       - soc_2: ["CC5.2", "CC6.6", "CC7.2"]
     condition:
     rules:

  # 3.7 Audit Software Inventory. (Manual)
   - id: 18570
     title: "Audit Software Inventory."
     description: "With the introduction of Mac OS X 10.6.6, Apple added a new application, App Store, which resides in the Applications directory. This application allows a user with admin privileges and an Apple ID to browse Apple's online App Store, purchase (including no-cost purchases), and install new applications, bypassing Enterprise software inventory controls. Any admin user can install software in the /Applications directory whether from internet downloads, thumb drives, optical media, cloud storage, or even binaries through email. Even standard users can run executables downloaded to their home folder by default. The source of the software is not nearly as important as a consistent audit of all installed software for patch compliance and appropriateness. A single user desktop where the user, administrator, and the person approving software are all the same person probably does not need to audit software inventory to this extent. It is helpful in the case of stability problems or malware, however. Scan systems on a monthly basis and determine the number of unauthorized pieces of software that are installed. Verify that if an unauthorized piece of software is found one month, it is removed from the system the next. Export System Information through the built-in System Information Application or other third-party tools on an organizationally defined timetable."
     rationale: "Part of comprehensive IT security involves device management and ensuring that all software is authorized and patched. Checking for macOS updates and app updates are relatively simple for the end user, and can even be updated with minimal privileges from trusted sources, if enabled. Remote monitoring of the patch status for software maintained through Apple is very well supported by management applications. Neither Apple capabilities nor third-party patch management solutions will cover all mission-necessary software for most organizations. Full visibility into software present on the system enables vulnerability and risk management. P.S. Don't forget about browser plugins/extensions for all installed software."
     remediation: "Delete any unnecessary applications from the system."
     references:
       - 'https://support.apple.com/en-us/HT203001'
       - 'https://www.cisecurity.org/controls/inventory-and-control-of-software-assets/'
     compliance:
       - cis: ["3.7"]
       - cis_csc_v8: ["2.1"]
       - cis_csc_v7: ["2.1"]
       - cmmc_v2.0: ["CM.L2-3.4.1"]
       - iso_27001-2013: ["A.8.1.1"]
       - nist_sp_800-53: ["CM-7(1)", "MA-3"]
       - pci_dss_v3.2.1: ["1.1.6", "2.4"]
       - pci_dss_v4.0: ["1.2.5", "6.3.2"]
       - soc_2: ["CC3.2", "CC6.1"]
     condition:
     rules:

  # 4.1 Ensure Bonjour Advertising Services Is Disabled. (Automated)
   - id: 18571
     title: "Ensure Bonjour Advertising Services Is Disabled."
     description: "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerate devices and services within a local subnet. DNS on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled."
     rationale: "Bonjour can simplify device discovery from an internal rogue or compromised host. An attacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-configured service or additional information to aid a targeted attack. Implementing this control disables the continuous broadcasting of \"I'm here!\" messages. Typical end-user endpoints should not have to advertise services to other computers. This setting does not stop the computer from sending out service discovery messages when looking for services on an internal subnet, if the computer is looking for a printer or server and using service discovery. To block all Bonjour traffic except to approved devices, the pf or other firewall would be needed."
     impact: "Some applications, like Final Cut Studio and AirPort Base Station management, may not operate properly if the mDNSResponder is turned off."
     remediation: "Terminal Method: Run the following command to disable Bonjour Advertising services: $ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mDNSResponder 2. The key to include is NoMulticastAdvertisements."
     compliance:
       - cis: ["4.1"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 4.2 Ensure HTTP Server Is Disabled. (Automated)
   - id: 18572
     title: "Ensure HTTP Server Is Disabled."
     description: "macOS used to have a graphical front-end to the embedded Apache web server in the Operating System. Personal web sharing could be enabled to allow someone on another computer to download files or information from the user's computer. Personal web sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. Apache, however, is still part of the Operating System and can be easily turned on to share files and provide remote connectivity to an end-user computer. Web sharing should only be done through hardened web servers and appropriate cloud services."
     rationale: "Web serving should not be done from a user desktop. Dedicated webservers or appropriate cloud storage should be used. Open ports make it easier to exploit the computer."
     impact: "The web server is both a point of attack for the system and a means for unauthorized file transfers."
     remediation: "Terminal Method: Run the following command to disable the HTTP server services: $ /usr/bin/sudo /usr/sbin/apachectl stop $ /usr/bin/sudo /bin/launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist."
     references:
       - 'https://www.stigviewer.com/stig/apple_macos_11_big_sur/2021-06-16/finding/V-'
       - 'https://httpd.apache.org/security/vulnerabilities_24.html'
     compliance:
       - cis: ["4.2"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 4.3 Ensure NFS Server Is Disabled. (Automated)
   - id: 18573
     title: "Ensure NFS Server Is Disabled."
     description: "macOS can act as an NFS fileserver. NFS sharing could be enabled to allow someone on another computer to mount shares and gain access to information from the user's computer. File sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. NFSD is still part of the Operating System and can be easily turned on to export shares and provide remote connectivity to an end-user computer. The etc/exports file contains the list of NFS shared directories. If the file exists, it is likely that NFS sharing has been enabled in the past or may be available periodically. As an additional check, the audit verifies that there is no /etc/exports file."
     rationale: "File serving should not be done from a user desktop. Dedicated servers should be used. Open ports make it easier to exploit the computer."
     impact: "The nfs server is both a point of attack for the system and a means for unauthorized file transfers."
     remediation: "Terminal Method: Run the following command to disable the nfsd fileserver services: $ /usr/bin/sudo /sbin/nfsd stop $ /usr/bin/sudo /bin/launchctl disable system/com.apple.nfsd Remove the exported Directory listing. $ /usr/bin/sudo /bin/rm /etc/exports."
     compliance:
       - cis: ["4.3"]
       - cis_csc_v8: ["4.1", "4.8"]
       - cis_csc_v7: ["5.1", "9.2"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "11.5", "2.2", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.5", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6", "CC7.1", "CC8.1"]
     condition:
     rules:

  # 5.1.1 Ensure Home Folders Are Secure. (Automated)
   - id: 18574
     title: "Ensure Home Folders Are Secure."
     description: "By default, macOS allows all valid users into the top level of every other user's home folder and restricts access to the Apple default folders within. Another user on the same system can see you have a \"Documents\" folder but cannot see inside it. This configuration does work for personal file sharing but can expose user files to standard accounts on the system. The best parallel for Enterprise environments is that everyone who has a Dropbox account can see everything that is at the top level but can't see your pictures. Similarly with macOS, users can see into every new Directory that is created because of the default permissions. Home folders should be restricted to access only by the user. Sharing should be used on dedicated servers or cloud instances that are managing access controls. Some environments may encounter problems if execute rights are removed as well as read and write. Either no access or execute only for group or others is acceptable."
     rationale: "Allowing all users to view the top level of all networked users' home folder may not be desirable since it may lead to the revelation of sensitive information."
     impact: "If implemented, users will not be able to use the \"Public\" folders in other users' home folders. \"Public\" folders with appropriate permissions would need to be set up in the /Shared folder."
     remediation: "Terminal Method: For each user, run the following command to secure all home folders: $ /usr/bin/sudo /bin/chmod -R og-rwx /Users/<username> Alternately, run the following command if there needs to be executable access for a home folder: $ /usr/bin/sudo /bin/chmod -R og-rw /Users/<username> example: $ /usr/bin/sudo /bin/chmod -R og-rw /Users/firstuser/ $ /usr/bin/sudo /bin/chmod -R og-rwx /Users/thirduser/."
     compliance:
       - cis: ["5.1.1"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 5.1.2 Ensure System Integrity Protection Status (SIP) Is Enabled. (Automated)
   - id: 18575
     title: "Ensure System Integrity Protection Status (SIP) Is Enabled."
     description: "System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. System Integrity Protection restricts access to System domain locations and restricts runtime attachment to system processes. Any attempt to inspect or attach to a system process will fail. Kernel Extensions are now restricted to /Library/Extensions and are required to be signed with a Developer ID."
     rationale: "Running without System Integrity Protection on a production system runs the risk of the modification of system binaries or code injection of system processes that would otherwise be protected by SIP."
     impact: "System binaries and processes could become compromised."
     remediation: "Terminal Method: Perform the following steps to enable System Integrity Protection: 1. Reboot into the Recovery Partition (reboot and hold down Command (⌘) + R) 2. Select Utilities 3. Select Terminal 4. Run the following command: $ /usr/bin/sudo /usr/bin/csrutil enable Successfully enabled System Integrity Protection. Please restart the machine for the changes to take effect. 5. Reboot the computer Note: You should research why the system had SIP disabled. It might be a better option to erase the Mac and reinstall the operating system. That is at your discretion. Note: You cannot enable System Integrity Protection from the booted operating system. If the remediation is attempted in the booted OS and not the Recovery Partition the output will give the error csrutil: failed to modify system integrity configuration. This tool needs to be executed from the Recovery OS."
     references:
       - 'https://developer.apple.com/documentation/security/disabling_and_enabling_syst'
       - 'https://support.apple.com/en-us/HT204899'
     compliance:
       - cis: ["5.1.2"]
       - cis_csc_v8: ["2.3", "2.6", "10.5"]
       - cis_csc_v7: ["2.6"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.5.1", "A.12.6.2"]
       - nist_sp_800-53: ["CM-10", "CM-7(1)", "CM-7(2)", "CM-8(3)", "SI-16"]
       - pci_dss_v3.2.1: ["1.4"]
       - pci_dss_v4.0: ["1.2.5", "12.3.4", "2.2.4"]
       - soc_2: ["CC5.2", "CC6.8", "CC7.1"]
     condition:
     rules:

  # 5.1.3 Ensure Apple Mobile File Integrity (AMFI) Is Enabled. (Automated)
   - id: 18576
     title: "Ensure Apple Mobile File Integrity (AMFI) Is Enabled."
     description: "Apple Mobile File Integrity (AMFI) was first released in macOS 10.12. The daemon and service block attempts to run unsigned code. AMFI uses lanchd, code signatures, certificates, entitlements, and provisioning profiles to create a filtered entitlement dictionary for an app. AMFI is the macOS kernel module that enforces code-signing and library validation."
     rationale: "Apple Mobile File Integrity validates that application code is validated."
     impact: "Applications could be compromised with malicious code."
     remediation: "Terminal Method: Run the following command to enable the Apple Mobile File Integrity service: $ /usr/bin/sudo /usr/sbin/nvram boot-args=\"\"."
     references:
       - 'https://eclecticlight.co/2018/12/29/amfi-checking-file-integrity-on-your-mac/'
       - 'https://github.com/usnistgov/macos_security/issues/39'
       - 'https://github.com/usnistgov/macos_security/issues/40'
       - 'https://www.naut.ca/blog/2020/11/13/forbidden-commands-to-liberate-macos/'
     compliance:
       - cis: ["5.1.3"]
       - cis_csc_v8: ["2.3", "2.6"]
       - cis_csc_v7: ["2.6"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.5.1", "A.12.6.2"]
       - nist_sp_800-53: ["CM-10", "CM-7(1)", "CM-7(2)", "CM-8(3)"]
       - pci_dss_v4.0: ["1.2.5", "12.3.4", "2.2.4"]
       - soc_2: ["CC5.2", "CC7.1"]
     condition:
     rules:

  # 5.1.4 Ensure Sealed System Volume (SSV) Is Enabled. (Automated)
   - id: 18577
     title: "Ensure Sealed System Volume (SSV) Is Enabled."
     description: "Sealed System Volume is a security feature introduced in macOS 11.0 Big Sur. During system installation, a SHA-256 cryptographic hash is calculated for all immutable system files and stored in a Merkle tree which itself is hashed as the Seal. Both are stored in the metadata of the snapshot created of the System volume. The seal is verified by the boot loader at startup. macOS will not boot if system files have been tampered with. If validation fails, the user will be instructed to reinstall the operating system. During read operations for files located in the Sealed System Volume, a hash is calculated and compared to the value stored in the Merkle tree."
     rationale: "Running without Sealed System Volume on a production system could run the risk of Apple software that integrates directly with macOS being modified."
     impact: "Apple Software that integrates with the operating system could become compromised."
     remediation: "If SSV has been disabled, assume that the operating system has been compromised. Back up any files, and do a clean install to a known good Operating System."
     references:
       - 'https://developer.apple.com/news/?id=3xpv8r2m'
       - 'https://eclecticlight.co/2020/11/30/is-big-surs-system-volume-sealed/'
       - 'https://eclecticlight.co/2020/06/25/big-surs-signed-system-volume-added-'
       - 'https://support.apple.com/guide/security/signed-system-volume-security-'
     compliance:
       - cis: ["5.1.4"]
       - cis_csc_v8: ["3.6", "3.11"]
       - cis_csc_v7: ["13.6", "14.8"]
       - cmmc_v2.0: ["AC.L2-3.1.19", "IA.L2-3.5.10", "MP.L2-3.8.1", "SC.L2-3.13.11", "SC.L2-3.13.16"]
       - hipaa: ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"]
       - iso_27001-2013: ["A.10.1.1", "A.6.2.1"]
       - nist_sp_800-53: ["SC-28", "SC-28(1)"]
       - pci_dss_v3.2.1: ["3.4", "3.4.1", "8.2.1"]
       - pci_dss_v4.0: ["3.1.1", "3.3.2", "3.3.3", "3.5.1", "3.5.1.2", "3.5.1.3", "8.3.2"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.1.5 Ensure Appropriate Permissions Are Enabled for System Wide Applications. (Automated)
   - id: 18578
     title: "Ensure Appropriate Permissions Are Enabled for System Wide Applications."
     description: "Applications in the System Applications Directory (/Applications) should be world-executable since that is their reason to be on the system. They should not be world-writable and allow any process or user to alter them for other processes or users to then execute modified versions."
     rationale: "Unauthorized modifications of applications could lead to the execution of malicious code."
     impact: "Applications changed will no longer be world-writable. Depending on the environment, there will be different risk tolerances on each non-conforming application. Global changes should not be performed where mission-critical applications are misconfigured."
     remediation: "Terminal Method: Run the following command to change the permissions for each application that does not meet the requirements: $ /usr/bin/sudo IFS=$'\\n' for apps in $( /usr/bin/find /Applications -iname \"*\\.app\" -type d -perm -2 ); do /bin/chmod -R o-w \"$apps\" done Note: Global changes should not be performed where mission-critical applications are part of the improperly permissioned applications."
     compliance:
       - cis: ["5.1.5"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 5.1.6 Ensure No World Writable Folders Exist in the System Folder. (Automated)
   - id: 18579
     title: "Ensure No World Writable Folders Exist in the System Folder."
     description: "Software sometimes insists on being installed in the /System/Volumes/Data/System Directory and has inappropriate world-writable permissions. Macs with writable files in System should be investigated forensically. A file with open writable permissions is a sign of at best a rogue application. It could also be a sign of a computer compromise and a persistent presence on the system."
     rationale: "Folders in /System/Volumes/Data/System should not be world-writable. The audit check excludes the \"Drop Box\" folder that is part of Apple's default user template."
     impact: "Changing file permissions could disrupt the use of applications that rely on files in the System Folder with vulnerable permissions."
     remediation: "Terminal Method: Run the following command to set permissions so that folders are not world-writable in the /System folder: $ /usr/bin/sudo IFS=$'\\n' for sysPermissions in $( /usr/bin/find /System/Volumes/Data/System -type d - perm -2 | /usr/bin/grep -v \"downloadDir\" ); do /bin/chmod -R o-w \"$sysPermissions\" done."
     compliance:
       - cis: ["5.1.6"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 5.1.7 Ensure No World Writable Folders Exist in the Library Folder. (Automated)
   - id: 18580
     title: "Ensure No World Writable Folders Exist in the Library Folder."
     description: "Software sometimes insists on being installed in the /System/Volumes/Data/Library Directory and has inappropriate world-writable permissions."
     rationale: "Folders in /System/Volumes/Data/Library should not be world-writable. The audit check excludes the /System/Volumes/Data/Library/Caches and /System/Volumes/Data/Library/Preferences/Audio/Data folders where the sticky bit is set."
     remediation: "Terminal Method: Run the following command to set permissions so that folders are not world-writable in the /System/Volumes/Data/Library folder: $ /usr/bin/sudo IFS=$'\\n' for libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d - perm -2 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data ); do /bin/chmod -R o-w \"$libPermissions\" done."
     compliance:
       - cis: ["5.1.7"]
       - cis_csc_v8: ["3.3"]
       - cis_csc_v7: ["14.6"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "AC.L2-3.1.3", "AC.L2-3.1.5", "MP.L2-3.8.2"]
       - hipaa: ["164.308(a)(3)(i)", "164.308(a)(3)(ii)(A)", "164.312(a)(1)"]
       - iso_27001-2013: ["A.9.1.1"]
       - nist_sp_800-53: ["AC-5", "AC-6"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - pci_dss_v4.0: ["1.3.1", "7.1"]
       - soc_2: ["CC5.2", "CC6.1"]
     condition:
     rules:

  # 5.2.1 Ensure Password Account Lockout Threshold Is Configured. (Automated)
   - id: 18581
     title: "Ensure Password Account Lockout Threshold Is Configured."
     description: "The account lockout threshold specifies the amount of times a user can enter an incorrect password before a lockout will occur. Ensure that a lockout threshold is part of the password policy on the computer."
     rationale: "The account lockout feature mitigates brute-force password attacks on the system."
     impact: "The number of incorrect log on attempts should be reasonably small to minimize the possibility of a successful password attack, while allowing for honest errors made during a normal user log on. The locked account will auto-unlock after a few minutes when bad password attempts stop. The computer will accept the still-valid password if remembered or recovered."
     remediation: "Terminal Method: Run the following command to set the maximum number of failed login attempts to less than or equal to 5: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxFailedLoginAttempts=<value≤5>\" Note: When the account lockout threshold is set with pwpolicy, it will also set a reset value to policyAttributeMinutesUntilFailedAuthenticationReset that defaults to 1 minute. You can change this value with the command: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"policyAttributeMinutesUntilFailedAuthenticationReset=<value in minutes>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxFailedLoginAttempts=5\" /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"policyAttributeMinutesUntilFailedAuthenticationReset=10\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is maxFailedAttempts 3. The key must be set to <integer><value≤5></integer> Note: When setting the lockout threshold with a mobile configuration profile, there is no default reset to the lockout. To set the reset value, use the key autoEnableInSeconds and set the key to <integer><value in seconds></integer>. Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     references:
       - 'https://workbench.cisecurity.org/communities/113'
     compliance:
       - cis: ["5.2.1"]
       - cis_csc_v8: ["6.2"]
       - cis_csc_v7: ["16.7"]
       - cmmc_v2.0: ["AC.L1-3.1.1"]
       - hipaa: ["164.308(a)(3)(ii)(C)"]
       - iso_27001-2013: ["A.9.2.6"]
       - nist_sp_800-53: ["AC-2(1)"]
       - pci_dss_v3.2.1: ["8.1.3"]
       - pci_dss_v4.0: ["8.2.4", "8.2.5"]
       - soc_2: ["CC6.2", "CC6.3"]
     condition:
     rules:

  # 5.2.2 Ensure Password Minimum Length Is Configured. (Automated)
   - id: 18582
     title: "Ensure Password Minimum Length Is Configured."
     description: "A minimum password length is the fewest number of characters a password can contain to meet a system's requirements. Ensure that a minimum of a 15-character password is part of the password policy on the computer. Where the confidentiality of encrypted information in FileVault is more of a concern, requiring a longer password or passphrase may be sufficient rather than imposing additional complexity requirements that may be self-defeating."
     rationale: "Information systems that are not protected with strong password schemes including passwords of minimum length provide a greater opportunity for attackers to crack the password and gain access to the system."
     impact: "Short passwords can be easily attacked."
     remediation: "Terminal Method: Run the following command to set the password length to greater than or equal to 15: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"minChars=<value≥15>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"minChars=15\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is minLength 3. The key must be set to <integer><value≥15></integer> Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.2"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.2.3 Ensure Complex Password Must Contain Alphabetic Characters Is Configured. (Manual)
   - id: 18583
     title: "Ensure Complex Password Must Contain Alphabetic Characters Is Configured."
     description: "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that an Alphabetic character is part of the password policy on the computer."
     rationale: "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system."
     impact: "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
     remediation: "Terminal Method: Run the following command to set the that passwords must contain at least one letter: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy - setaccountpolicies \"requiresAlpha=<value≥1>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresAlpha=1\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is requireAlphanumeric 3. The key must be set to <true/> Note: This profile sets a requirement of both an alphabetical and a numeric character. Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.3"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.2.4 Ensure Complex Password Must Contain Numeric Character Is Configured. (Manual)
   - id: 18584
     title: "Ensure Complex Password Must Contain Numeric Character Is Configured."
     description: "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that a number or numeric value is part of the password policy on the computer."
     rationale: "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system."
     impact: "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
     remediation: "Terminal Method: Run the following command to set passwords to require at least one number: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy - setaccountpolicies \"requiresNumeric=<value≥1>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresNumeric=2\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is requireAlphanumeric 3. The key must be set to <true/> Note: This profile sets a requirement of both an alphabetical and a numeric character. Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.4"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.2.5 Ensure Complex Password Must Contain Special Character Is Configured. (Manual)
   - id: 18585
     title: "Ensure Complex Password Must Contain Special Character Is Configured."
     description: "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that a special character is part of the password policy on the computer."
     rationale: "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system."
     impact: "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
     remediation: "Terminal Method: Run the following command to set passwords to require at least one special character: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy - setaccountpolicies \"requiresSymbol=<value≥1>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresSymbol=1\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is minComplexChars 3. The key must be set to <integer><value≥1></integer> Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.5"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.2.6 Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured. (Manual)
   - id: 18586
     title: "Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured."
     description: "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that both uppercase and lowercase letters are part of the password policy on the computer."
     rationale: "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system."
     impact: "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
     remediation: "Terminal Method: Run the following command to set passwords to require at upper and lower case letter: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresMixedCase=<value≥1>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresMixedCase=1\"."
     compliance:
       - cis: ["5.2.6"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.2.7 Ensure Password Age Is Configured. (Automated)
   - id: 18587
     title: "Ensure Password Age Is Configured."
     description: "Over time, passwords can be captured by third parties through mistakes, phishing attacks, third-party breaches, or merely brute-force attacks. To reduce the risk of exposure and to decrease the incentives of password reuse (passwords that are not forced to be changed periodically generally are not ever changed), users should reset passwords periodically. This control uses 365 days as the acceptable value. Some organizations may be more or less restrictive. This control mainly exists to mitigate against password reuse of the macOS account password in other realms that may be more prone to compromise. Attackers take advantage of exposed information to attack other accounts."
     rationale: "Passwords should be changed periodically to reduce exposure."
     impact: "Required password changes will lead to some locked computers requiring admin assistance."
     remediation: "Terminal Method: Run the following command to require that passwords expire after at most 365 days: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxMinutesUntilChangePassword=<value≤525600>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxMinutesUntilChangePassword=43200\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is maxPINAgeInDays 3. The key must be set to <integer><value≥365></integer> Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.7"]
       - cis_csc_v8: ["5.3"]
       - cis_csc_v7: ["16.9"]
       - cmmc_v2.0: ["IA.L2-3.5.6"]
       - nist_sp_800-53: ["AC-2(3)"]
       - pci_dss_v3.2.1: ["8.1.4"]
       - pci_dss_v4.0: ["8.3.7"]
     condition:
     rules:

  # 5.2.8 Ensure Password History Is Configured. (Automated)
   - id: 18588
     title: "Ensure Password History Is Configured."
     description: "Over time, passwords can be captured by third parties through mistakes, phishing attacks, third-party breaches, or merely brute-force attacks. To reduce the risk of exposure and to decrease the incentives of password reuse (passwords that are not forced to be changed periodically generally are not ever changed), users must reset passwords periodically. This control ensures that previous passwords are not reused immediately by keeping a history of previous password hashes. Ensure that password history checks are part of the password policy on the computer. This control checks whether a new password is different than the previous 15. The latest NIST guidance based on exploit research referenced in this section details how one of the greatest risks is password exposure rather than password cracking. Passwords should be changed to a new unique value whenever a password might have been exposed to anyone other than the account holder. Attackers have maintained persistent control based on predictable password change patterns and substantially different patterns should be used in case of a leak."
     rationale: "Old passwords should not be reused."
     impact: "Required password changes will lead to some locked computers requiring admin assistance."
     remediation: "Terminal Method: Run the following command to require that the password must to be different from at least the last 15 passwords: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"usingHistory=<value≥15>\" example: $ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"usingHistory=15\" Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.mobiledevice.passwordpolicy 2. The key to include is pinHistory 3. The key must be set to <integer><value≥15></integer> Note: The profile method is the preferred method for setting password policy since - setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release."
     compliance:
       - cis: ["5.2.8"]
       - cis_csc_v8: ["5.2"]
       - cis_csc_v7: ["4.4"]
       - cmmc_v2.0: ["IA.L2-3.5.7"]
       - iso_27001-2013: ["A.9.4.3"]
       - pci_dss_v4.0: ["2.2.2", "8.3.5", "8.3.6", "8.6.3"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.3.1 Ensure all user storage APFS volumes are encrypted. (Manual)
   - id: 18589
     title: "Ensure all user storage APFS volumes are encrypted."
     description: "Apple developed a new file system which was first made available in 10.12 and then became the default in 10.13. The file system is optimized for Flash and Solid-State storage and encryption. https://en.wikipedia.org/wiki/Apple_File_System macOS computers generally have several volumes created as part of APFS formatting, including Preboot, Recovery and Virtual Memory (VM), as well as traditional user disks. All APFS volumes that do not have specific roles and do not require encryption should be encrypted. \"Role\" disks include Preboot, Recovery and VM. User disks are labelled with \"(No specific role)\" by default."
     rationale: "In order to protect user data from loss or tampering volumes, carrying data should be encrypted."
     impact: "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data."
     remediation: "Use Disk Utility to erase a user disk and format as APFS (Encrypted). Note: APFS Encrypted disks will be described as \"FileVault\" whether they are the boot volume or not in the ap list."
     compliance:
       - cis: ["5.3.1"]
       - cis_csc_v8: ["3.6", "3.11"]
       - cis_csc_v7: ["13.6", "14.8"]
       - cmmc_v2.0: ["AC.L2-3.1.19", "IA.L2-3.5.10", "MP.L2-3.8.1", "SC.L2-3.13.11", "SC.L2-3.13.16"]
       - hipaa: ["164.312(a)(2)(iv)", "164.312(e)(2)(ii)"]
       - iso_27001-2013: ["A.10.1.1", "A.6.2.1"]
       - nist_sp_800-53: ["SC-28", "SC-28(1)"]
       - pci_dss_v3.2.1: ["3.4", "3.4.1", "8.2.1"]
       - pci_dss_v4.0: ["3.1.1", "3.3.2", "3.3.3", "3.5.1", "3.5.1.2", "3.5.1.3", "8.3.2"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.3.2 Ensure all user storage CoreStorage volumes are encrypted. (Manual)
   - id: 18590
     title: "Ensure all user storage CoreStorage volumes are encrypted."
     description: "Apple introduced CoreStorage with 10.7. It is used as the default for formatting on macOS volumes prior to 10.13. All HFS and CoreStorage Volumes should be encrypted."
     rationale: "In order to protect user data from loss or tampering, volumes carrying data should be encrypted."
     impact: "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data."
     remediation: "Use Disk Utility to erase a disk and format as macOS Extended (Journaled, Encrypted). v8 v7 v7."
     compliance:
       - cis: ["5.3.2"]
       - cis_csc_v8: ["3.9"]
       - cmmc_v2.0: ["MP.L2-3.8.6", "MP.L2-3.8.7"]
       - hipaa: ["164.310(d)(1)"]
       - nist_sp_800-53: ["MP-5"]
       - pci_dss_v3.2.1: ["3.4"]
       - pci_dss_v4.0: ["3.5.1.2"]
       - soc_2: ["CC6.1"]
     condition:
     rules:

  # 5.4 Ensure the Sudo Timeout Period Is Set to Zero. (Automated)
   - id: 18591
     title: "Ensure the Sudo Timeout Period Is Set to Zero."
     description: "The sudo command allows the user to run programs as the root user. Working as the root user allows the user an extremely high level of configurability within the system. This control, along with the control to use a separate timestamp for each tty, limits the window where an unauthorized user, process, or attacker could utilize legitimate credentials that are valid for longer than required."
     rationale: "The sudo command stays logged in as the root user for five minutes before timing out and re-requesting a password. This five-minute window should be eliminated since it leaves the system extremely vulnerable. This is especially true if an exploit were to gain access to the system, since they would be able to make changes as a root user."
     impact: "This control has a serious impact where users often have to use sudo. It is even more of an impact where users have to use sudo multiple times in quick succession as part of normal work processes. Organizations with that common use case will likely find this control too onerous and are better to accept the risk of not requiring a 0 grace period. In some ways the use of sudo -s, which is undesirable, is better than a long grace period since that use does change the hash to show that it is a root shell rather than a normal shell where sudo commands will be implemented without a password."
     remediation: "Terminal Method: Run the following command to edit the sudo settings: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name> example: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration Note: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a . so do not add a file extension to the configuration file. Add the line Defaults timestamp_timeout=0 to the configuration file. If /etc/sudoers.d/ is not owned by root or in the wheel group, run the following to change ownership and group: $ /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/sudoers.d/."
     compliance:
       - cis: ["5.4"]
       - cis_csc_v8: ["4.3"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L2-3.1.10", "AC.L2-3.1.11"]
       - hipaa: ["164.312(a)(2)(iii)"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["AC-11", "AC-11(1)", "AC-12", "AC-2(5)"]
       - pci_dss_v3.2.1: ["8.1.8"]
       - pci_dss_v4.0: ["8.2.8"]
     condition:
     rules:

  # 5.5 Ensure a Separate Timestamp Is Enabled for Each User/tty Combo. (Automated)
   - id: 18592
     title: "Ensure a Separate Timestamp Is Enabled for Each User/tty Combo."
     description: "Using tty tickets ensures that a user must enter the sudo password in each Terminal session. With sudo versions 1.8 and higher, introduced in 10.12, the default value is to have tty tickets for each interface so that root access is limited to a specific terminal. The default configuration can be overwritten or not configured correctly on earlier versions of macOS."
     rationale: "In combination with removing the sudo timeout grace period, a further mitigation should be in place to reduce the possibility of a background process using elevated rights when a user elevates to root in an explicit context or tty. Additional mitigation should be in place to reduce the risk of privilege escalation of background processes."
     impact: "This control should have no user impact. Developers or installers may have issues if background processes are spawned with different interfaces than where sudo was executed."
     remediation: "Terminal Method: Run the following command to edit the sudo settings: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name> example: $ /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration Note: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a . so do not add a file extension to the configuration file. Add the line Defaults timestamp_type=tty to the configuration file. Note: The Defaults timestamp_type=tty line can be added to an existing configuration file or a new one. That will depend on your organization's preference and works either way."
     references:
       - 'https://github.com/jorangreef/sudo-prompt/issues/33'
     compliance:
       - cis: ["5.5"]
       - cis_csc_v8: ["4.3"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L2-3.1.10", "AC.L2-3.1.11"]
       - hipaa: ["164.312(a)(2)(iii)"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["AC-11", "AC-11(1)", "AC-12", "AC-2(5)"]
       - pci_dss_v3.2.1: ["8.1.8"]
       - pci_dss_v4.0: ["8.2.8"]
     condition:
     rules:

  # 5.6 Ensure the "root" Account Is Disabled. (Automated)
   - id: 18593
     title: "Ensure the "root" Account Is Disabled."
     description: "The root account is a superuser account that has access privileges to perform any actions and read/write to any file on the computer. With some versions of Linux, the system administrator may commonly use the root account to perform administrative functions."
     rationale: "Enabling and using the root account puts the system at risk since any successful exploit or mistake while the root account is in use could have unlimited access privileges within the system. Using the sudo command allows users to perform functions as a root user while limiting and password protecting the access privileges. By default the root account is not enabled on a macOS computer. An administrator can escalate privileges using the sudo command (use -s or -i to get a root shell)."
     impact: "Some legacy POSIX software might expect an available root account."
     remediation: "Graphical Method: Perform the following steps to ensure that the root user is disabled: 1. Open /System/Library/CoreServices/Applications/Directory Utility 2. Click the lock icon to unlock the service 3. Click Edit in the menu bar 4. Click Disable Root User Terminal Method: Run the following command to disable the root user: $ /usr/bin/sudo /usr/sbin/dsenableroot -d username = root user password:."
     compliance:
       - cis: ["5.6"]
       - cis_csc_v8: ["5.4"]
       - cis_csc_v7: ["4.3"]
       - cmmc_v2.0: ["AC.L2-3.1.5", "AC.L2-3.1.6", "AC.L2-3.1.7", "SC.L2-3.13.3"]
       - iso_27001-2013: ["A.9.2.3"]
       - nist_sp_800-53: ["AC-6(2)", "AC-6(5)"]
       - pci_dss_v3.2.1: ["7.1", "7.1.1", "7.1.2", "7.1.3"]
       - soc_2: ["CC6.1", "CC6.3"]
     condition:
     rules:

  # 5.7 Ensure an Administrator Account Cannot Login to Another User's Active and Locked Session. (Automated)
   - id: 18594
     title: "Ensure an Administrator Account Cannot Login to Another User's Active and Locked Session."
     description: "macOS has a privilege that can be granted to any user that will allow that user to unlock active user's sessions."
     rationale: "Disabling the administrator's and/or user's ability to log into another user's active and locked session prevents unauthorized persons from viewing potentially sensitive and/or personal information."
     impact: "While Fast user switching is a workaround for some lab environments, especially where there is even less of an expectation of privacy, this setting change may impact some maintenance workflows."
     remediation: "Terminal Method: Run the following command to disable a user logging into another user's active and/or locked session: $ /usr/bin/sudo /usr/bin/security authorizationdb write system.login.screensaver use-login-window-ui YES (0)."
     references:
       - 'https://derflounder.wordpress.com/2014/02/16/managing-the-authorization-'
       - 'https://www.jamf.com/jamf-nation/discussions/18195/system-login-screensaver'
     compliance:
       - cis: ["5.7"]
       - cis_csc_v8: ["4.3"]
       - cis_csc_v7: ["16.11"]
       - cmmc_v2.0: ["AC.L2-3.1.10", "AC.L2-3.1.11"]
       - hipaa: ["164.312(a)(2)(iii)"]
       - iso_27001-2013: ["A.8.1.3"]
       - nist_sp_800-53: ["AC-11", "AC-11(1)", "AC-12", "AC-2(5)"]
       - pci_dss_v3.2.1: ["8.1.8"]
       - pci_dss_v4.0: ["8.2.8"]
     condition:
     rules:

  # 5.8 Ensure a Login Window Banner Exists. (Automated)
   - id: 18595
     title: "Ensure a Login Window Banner Exists."
     description: "A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an acknowledgment by the user that they have been informed of the use policy in the banner if required. The system recognizes either the .txt and the .rtf formats."
     rationale: "An access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements."
     impact: "Users will have to click on the window with the Login text before logging into the computer."
     remediation: "Terminal Method: Run the following commands to create or edit the login window text and set the proper permissions: Edit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the /Library/Security/ folder, to include the required login window banner text. Perform the following to set permissions on the policy banner file: $ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.txt $ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.rtf Note: If your organization uses an .rtfd file to set the policy banner, run $ /usr/bin/sudo /usr/sbin/chown -R o+rx /Library/Security/PolicyBanner.rtfd to update the permissions."
     references:
       - 'https://support.apple.com/en-au/HT202277'
     compliance:
       - cis: ["5.8"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 5.9 Ensure Legacy EFI Is Valid and Updating. (Automated)
   - id: 18596
     title: "Ensure Legacy EFI Is Valid and Updating."
     description: "In order to mitigate firmware attacks, Apple has created an automated Firmware check to ensure that the EFI version running is a known good version from Apple. There is also an automated process to check it every seven days. This check is only valid on T1 chips and prior. Neither T2 chips nor Apple silicon require this control check."
     rationale: "If the Firmware of a computer has been compromised, the Operating System that the Firmware loads cannot be trusted, either."
     remediation: "If EFI does not pass the integrity check, you may send a report to Apple. Backing up files and clean installing a known good Operating System and Firmware is recommended."
     compliance:
       - cis: ["5.9"]
       - cis_csc_v8: ["2.2"]
       - cis_csc_v7: ["2.2"]
       - pci_dss_v4.0: ["12.3.4", "2.2.5"]
     condition:
     rules:

  # 5.10 Ensure the Guest Home Folder Does Not Exist. (Automated)
   - id: 18597
     title: "Ensure the Guest Home Folder Does Not Exist."
     description: "In the previous two controls, the guest account login has been disabled and sharing to guests has been disabled, as well. There is no need for the legacy Guest home folder to remain in the file system. When normal user accounts are removed, you have the option to archive it, leave it in place, or delete. In the case of the guest folder, the folder remains in place without a GUI option to remove it. If at some point in the future a Guest account is needed, it will be re-created. The presence of the Guest home folder can cause automated audits to fail when looking for compliant settings within all User folders, as well. Rather than ignoring the folder's continued existence, it is best removed."
     rationale: "The Guest home folders are unneeded after the Guest account is disabled and could be used inappropriately."
     impact: "The Guest account should not be necessary after it is disabled, and it will be automatically re-created if the Guest account is re-enabled."
     remediation: "Terminal Method: Run the following command to remove the Guest user home folder: $ /usr/bin/sudo /bin/rm -R /Users/Guest."
     compliance:
       - cis: ["5.10"]
       - cis_csc_v8: ["4.1"]
       - cis_csc_v7: ["5.1"]
       - cmmc_v2.0: ["AC.L1-3.1.1", "AC.L1-3.1.2", "CM.L2-3.4.1", "CM.L2-3.4.2", "CM.L2-3.4.6", "CM.L2-3.4.7"]
       - iso_27001-2013: ["A.14.2.5", "A.8.1.3"]
       - nist_sp_800-53: ["CM-7(1)", "CM-9", "SA-10"]
       - pci_dss_v3.2.1: ["11.5", "2.2"]
       - pci_dss_v4.0: ["1.1.1", "1.2.1", "1.2.6", "1.2.7", "1.5.1", "2.1.1", "2.2.1"]
       - soc_2: ["CC7.1", "CC8.1"]
     condition:
     rules:

  # 6.1.1 Ensure Show All Filename Extensions Setting is Enabled. (Automated)
   - id: 18598
     title: "Ensure Show All Filename Extensions Setting is Enabled."
     description: "A filename extension is a suffix added to a base filename that indicates the base filename's file format."
     rationale: "Visible filename extensions allow the user to identify the file type and the application it is associated with which leads to quick identification of misrepresented malicious files."
     impact: "The user of the system can open files of unknown or unexpected filetypes if the extension is not visible."
     remediation: "Graphical Method: Perform the following steps to ensure file extensions are shown: 1. Open Finder 2. Select Finder in the menu bar 3. Select Settings 4. Select Advanced 5. Set Show all filename extensions to enabled Terminal Method: Run the following command to enable displaying of file extensions: $ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions -bool true $ /usr/bin/sudo killall Finder example: $ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/secondname/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions -bool true $ /usr/bin/sudo killall Finder."
     references:
       - 'https://blog.xpnsec.com/macos-filename-homoglyphs-revisited/'
       - 'https://null-byte.wonderhowto.com/how-to/hacking-macos-create-fake-pdf-trojan-'
     compliance:
       - cis: ["6.1.1"]
       - cis_csc_v8: ["2.3"]
       - cis_csc_v7: ["2.6"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.5.1", "A.12.6.2"]
       - nist_sp_800-53: ["CM-10", "CM-7(2)", "CM-8(3)"]
       - pci_dss_v4.0: ["12.3.4"]
       - soc_2: ["CC7.1"]
     condition:
     rules:

  # 6.2.1 Ensure Protect Mail Activity in Mail Is Enabled. (Manual)
   - id: 18599
     title: "Ensure Protect Mail Activity in Mail Is Enabled."
     description: "Apple provides privacy protection that should be enabled for the mail app on macOS to reduce information collection from a user that receives email."
     rationale: "Email is routinely abused by attackers, spammers and marketers. The \"Protect Mail Activity\" control reduces risk by hiding the current IP address of your Mac and privately downloading remote content. The Protect Mail Activity function of privately downloading remote content is not applicable for those users that do not download any remote content. Typical Internet email is no longer plain text and will not render properly without remote content. Personal email or mailing list email may function without complaint by blocking remote content."
     impact: "Some remote content may be access-controlled and refuse to download with this setting enabled."
     remediation: "Graphical Method: Perform the following steps to enabled protect mail activity: 1. Open Mail 2. Select Mail in the menu bar 3. Select Settings... 4. Select Privacy 5. Set Protect Mail Activity to enabled."
     references:
       - 'https://support.apple.com/guide/mail/use-mail-privacy-protection-'
     compliance:
       - cis: ["6.2.1"]
       - cis_csc_v8: ["9.1", "9.3"]
       - cis_csc_v7: ["7.1", "7.4"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.12.2.1", "A.13.1.1", "A.8.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "11.4"]
       - pci_dss_v4.0: ["1.2.6", "1.4.2"]
       - soc_2: ["CC5.2", "CC6.6"]
     condition:
     rules:

  # 6.3.1 Ensure Automatic Opening of Safe Files in Safari Is Disabled. (Automated)
   - id: 18600
     title: "Ensure Automatic Opening of Safe Files in Safari Is Disabled."
     description: "Safari will automatically run or execute what it considers safe files. This can include installers and other files that execute on the operating system. Safari evaluates file safety by using a list of filetypes maintained by Apple. The list of files include text, image, video and archive formats that would be run in the context of the OS rather than the browser."
     rationale: "Hackers have taken advantage of this setting via drive-by attacks. These attacks occur when a user visits a legitimate website that has been corrupted. The user unknowingly downloads a malicious file either by closing an infected pop-up or hovering over a malicious banner. An attacker can create a malicious file that will fall within Safari's safe file list that will download and execute without user input."
     impact: "Apple considers many files that the operating system itself auto-executes as \"safe files.\" Many of these files could be malicious and could execute locally without the user even knowing that a file of a specific type had been downloaded."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is AutoOpenSafeDownloads 3. The key must be set to: <false/>."
     compliance:
       - cis: ["6.3.1"]
       - cis_csc_v8: ["9.1", "9.6"]
       - cis_csc_v7: ["7.1", "7.9", "8.5"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9", "SC.L2-3.13.13", "SI.L1-3.14.2"]
       - iso_27001-2013: ["A.12.2.1", "A.13.1.1", "A.8.1.3"]
       - nist_sp_800-53: ["SI-8"]
       - pci_dss_v4.0: ["5.4.1"]
     condition:
     rules:

  # 6.3.2 Audit History and Remove History Items. (Manual)
   - id: 18601
     title: "Audit History and Remove History Items."
     description: "Organizational management of user web browsing history is a challenge affected by multiple facets. Organizations should decide whether to manage browser history and how much history should be maintained."
     rationale: "There are conflicting concerns in the retention of browser history. Unlimited retention: - Consumes disk space - Preferred by on disk forensics teams - User searchable for old visited pages - User privacy concerns - Security concerns to retain old links that may be stale or lead to compromised pages or pages with changes or inappropriate content Old browser history becomes stale and the use or misuse of the data can lead to unwanted outcomes. Search engine results are maintained and often provide much more relevant current information than old website visit information."
     impact: "If old browsing history is not available, it will not be available to authorized or unauthorized users. Some users may find old and even stale information useful."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is HistoryAgeInDaysLimit 3. The key must be set to: <integer><1,7,14,31,365,36500></integer> Note: Setting the plist key to a value that is not represented by the GUI could cause issues. Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     compliance:
       - cis: ["6.3.2"]
       - cis_csc_v8: ["9.1"]
       - cis_csc_v7: ["7.1"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.2.1", "A.8.1.3"]
     condition:
     rules:

  # 6.3.3 Ensure Warn When Visiting A Fraudulent Website in Safari Is Enabled. (Automated)
   - id: 18602
     title: "Ensure Warn When Visiting A Fraudulent Website in Safari Is Enabled."
     description: "Apple uses the Google Safe Browsing API to check for fraudulent websites and report them to the user attempting to visit one."
     rationale: "Attackers use crafted web pages to social engineer users to load unwanted content. Warning users prior to loading the content enables better security."
     impact: "Once-compromised websites serving malware could be sanitized and remain in the database, though there is no widespread reporting of that risk."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is WarnAboutFraudulentWebsites 3. The key must be set to: <true/> Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     references:
       - 'https://support.apple.com/guide/safari/security-ibrw1074/16.0/mac/12.0'
     compliance:
       - cis: ["6.3.3"]
       - cis_csc_v8: ["9.1", "9.3"]
       - cis_csc_v7: ["7.1", "7.4"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.12.2.1", "A.13.1.1", "A.8.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "11.4"]
       - pci_dss_v4.0: ["1.2.6", "1.4.2"]
       - soc_2: ["CC5.2", "CC6.6"]
     condition:
     rules:

  # 6.3.4 Ensure Prevent Cross-site Tracking in Safari Is Enabled. (Automated)
   - id: 18603
     title: "Ensure Prevent Cross-site Tracking in Safari Is Enabled."
     description: "There is a vast network of groups that collect, use and sell user data. One method used to collect user data is pay and provide contented and services for website owners, along with that \"assistance\" the site owners push tracking cookies on visitors. In many cases the help allows a content owner to keep the site up. The tracking cookies allow information brokers to track web users across visited sites. For better privacy and to provide some resistance to data brokers prevent cross-tracking."
     rationale: "Cross-tracking allows data-brokers to follow you across the Internet to enable their business model of selling personal data. Users should protect their data and not volunteer it to marketing companies."
     impact: "Marketing companies will be unable to target you as effectively."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is BlockStoragePolicy 3. The key must be set to: 2 4. The key to also include is WebKitPreferences.storageBlockingPolicy 5. The key must be set to: 1 6. The key to also include is WebKitStorageBlockingPolicy 7. The key must be set to: 1."
     references:
       - 'https://support.apple.com/guide/safari/prevent-cross-site-tracking-sfri40732/mac'
     compliance:
       - cis: ["6.3.4"]
       - cis_csc_v8: ["9.1"]
       - cis_csc_v7: ["7.1"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.2.1", "A.8.1.3"]
     condition:
     rules:

  # 6.3.5 Audit Hide IP Address in Safari Setting. (Manual)
   - id: 18604
     title: "Audit Hide IP Address in Safari Setting."
     description: "Public (Routable) IP addresses can be used to track people to their current location, including home and business addresses. While a valid IP address is necessary to load the site, the valid address does not need to be provided to known trackers and should be hidden."
     rationale: "Trackers can correlate your visits through various applications, including websites, and are a threat to your privacy."
     impact: "Website address blocking through iCloud Private Relay may prevent some wanted pages to load that use IP geolocation access controls."
     remediation: "Graphical Method: Perform the following steps to set Safari whether or not to hide IP addresses from trackers: 1. Open Safari 2. Select Safari from the menu bar 3. Select Settings 4. Select Privacy 5. Set Hide IP address from trackers to your organization's requirements Terminal Method: Run the following command to enable or disable hiding IP addresses from trackers in Safari: $ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preference s/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int <130272/130276> 130272 will set hide IP address from trackers to disabled. 130276 will enable it. example: $ /usr/bin/sudo -u firstuser /usr/bin/defaults write /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences /com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 130276 $ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preference s/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 130272 Note: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences."
     references:
       - 'https://support.apple.com/en-bn/guide/safari/sfri35610/16.0/mac/12.0'
     compliance:
       - cis: ["6.3.5"]
       - cis_csc_v8: ["9.1", "9.3"]
       - cis_csc_v7: ["7.1", "7.4"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.12.2.1", "A.13.1.1", "A.8.1.3"]
       - pci_dss_v3.2.1: ["1.1.6", "11.4"]
       - pci_dss_v4.0: ["1.2.6", "1.4.2"]
       - soc_2: ["CC5.2", "CC6.6"]
     condition:
     rules:

  # 6.3.6 Ensure Advertising Privacy Protection in Safari Is Enabled. (Automated)
   - id: 18605
     title: "Ensure Advertising Privacy Protection in Safari Is Enabled."
     description: "Apple provides a framework that allows advertisers to target Apple users and end-users with advertisements. While many people prefer that when they see advertising it is relevant to them and their interests, the detailed information that is data mining collected, correlated, and available to advertisers in repositories is often disconcerting. This information is valuable to both advertisers and attackers and has been used with other metadata to reveal users' identities. Organizations should manage advertising settings on computers rather than allow users to configure the settings. Apple Information Ad tracking should be limited on 10.15 and prior."
     rationale: "Organizations should manage user privacy settings on managed devices to align with organizational policies and user data protection requirements."
     impact: "Uses will see generic advertising rather than targeted advertising. Apple warns that this will reduce the number of relevant ads."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is WebKitPreferences.privateClickMeasurementEnabled 3. The key must be set to: <true/> Note: A user can still uncheck this option in the GUI, but it remains on in the background and will show it enabled when re-launching Safari."
     compliance:
       - cis: ["6.3.6"]
       - cis_csc_v8: ["9.1"]
       - cis_csc_v7: ["7.1"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.2.1", "A.8.1.3"]
     condition:
     rules:

  # 6.3.7 Ensure Show Full Website Address in Safari Is Enabled. (Automated)
   - id: 18606
     title: "Ensure Show Full Website Address in Safari Is Enabled."
     description: "Attackers use websites with malicious or unwanted content to exploit the user or the computer. Part of the attack chain is to lure someone to load their content rather than the desired content. In order to reduce the risk in interacting with unwanted content, the full website address should always be displayed in Safari."
     rationale: "Full visibility into what site is being visited is important for privacy and security."
     impact: "Many URLs are very long and complicated, particularly for internal content management systems. Some complete URLS in the Smart Search Field may be difficult to parse."
     remediation: "Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Safari 2. The key to include is ShowFullURLInSmartSearchField 3. The key must be set to: <true/>."
     references:
       - 'https://apple.stackexchange.com/questions/371473/always-show-full-url-in-'
     compliance:
       - cis: ["6.3.7"]
       - cis_csc_v8: ["9.1"]
       - cis_csc_v7: ["7.1"]
       - cmmc_v2.0: ["CM.L2-3.4.2", "CM.L2-3.4.9"]
       - iso_27001-2013: ["A.12.2.1", "A.8.1.3"]
     condition:
     rules:

  # 6.4.1 Ensure Secure Keyboard Entry Terminal.app Is Enabled. (Automated)
   - id: 18607
     title: "Ensure Secure Keyboard Entry Terminal.app Is Enabled."
     description: "Secure Keyboard Entry prevents other applications on the system and/or network from detecting and recording what is typed into Terminal. Unauthorized applications and malicious code could intercept keystrokes entered in the Terminal."
     rationale: "Enabling Secure Keyboard Entry minimizes the risk of a key logger detecting what is entered in Terminal."
     impact: "Enabling this in Terminal would prevent an application that is otherwise validly intercepting keyboard input from intercepting that input in Terminal.app. This could impact productivity tools."
     remediation: "Graphical Method: Perform the following steps to enable secure keyboard entries in Terminal: 1. Open the Applications folder 2. Open the Utilities folder 3. Open Terminal 4. Select Terminal in the Menu Bar 5. Set Secure Keyboard Entry to enabled Terminal Method: $ /usr/bin/sudo -u <username> /usr/bin/defaults write -app Terminal SecureKeyboardEntry -bool true example: $ /usr/bin/sudo -u firstuser /usr/bin/defaults write -app Terminal SecureKeyboardEntry -bool true Profile Method: Create or edit a configuration profile with the following information: 1. The PayloadType string is com.apple.Terminal 2. The key to include is SecureKeyboardEntry 3. The key must be set to <true/> Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
     references:
       - 'https://support.apple.com/en-ca/guide/terminal/trml109/mac'
       - 'https://developer.apple.com/library/archive/technotes/tn2150/_index.html'
       - 'https://krypted.com/mac-os-x/secure-keyboard-entry-on-macos/'
     compliance:
       - cis: ["6.4.1"]
       - cis_csc_v8: ["4.8"]
       - cis_csc_v7: ["4.1", "5.1", "9.2"]
       - cmmc_v2.0: ["CM.L2-3.4.7", "CM.L2-3.4.8", "SC.L2-3.13.6"]
       - iso_27001-2013: ["A.13.1.3", "A.14.2.5", "A.8.1.3", "A.9.2.3"]
       - pci_dss_v3.2.1: ["1.1.6", "1.2.1", "2.2.2", "2.2.5"]
       - pci_dss_v4.0: ["1.2.5", "2.2.4", "6.4.1"]
       - soc_2: ["CC6.3", "CC6.6"]
     condition:
     rules:
