CRED=\033[1;31m
CYELLOW=\033[1;33m
CCYAN=\033[1;36m
CGREEN=\033[1;32m
CEXTERN=\033[1;35m
CEND=\033[0m

P_BIN=@printf '$(CRED)%s$(CEND)\n'
P_OBJ=@printf '$(CCYAN)%s$(CEND)\n'
P_EXT=@printf '$(CYELLOW)%s$(CEND)\n'
P_DONE=@printf '$(CGREEN)%s$(CEND)\n'

#DIRS
EXTERNAL=external
CPE_GENERATE=cpe_db_create
CPE_EXTRACT=agent_cpe_extractor
NVD_GENERATE=nvd_generate

W_TOOLS=wazuh_tools
DATABASE_FILE=vuln.db
POC_BINARIES=$(CPE_GENERATE)/cpe_db_create $(CPE_EXTRACT)/agent_cpe_extractor $(NVD_GENERATE)/nvd_database_create
DB_SCHEMA=cpe_schema
SQLITE=sqlite3
LCJSON=$(EXTERNAL)/cJSON/cJSON
OS_NET=$(EXTERNAL)/os_net/os_net
RANDOM=$(EXTERNAL)/random/random
LSQLITE=$(EXTERNAL)/lib$(SQLITE).a
COMMON_DEPS=$(LCJSON).o $(OS_NET).o $(EXTERNAL)/$(W_TOOLS).o $(RANDOM).o
FLAGS=-L$(EXTERNAL) -l$(SQLITE) -lpthread -lm -ldl -DCPE_DB=\"${DATABASE_FILE}\"

default: $(LSQLITE) $(POC_BINARIES)
	$(P_DONE) "Everything compiled correctly"

$(CPE_GENERATE)/cpe_db_create: $(CPE_GENERATE)/cpe_db_create.o  $(COMMON_DEPS) $(DB_SCHEMA).o
	$(P_BIN) "Compiling $@"
	gcc -g -o $@ $^ $(FLAGS)

$(CPE_EXTRACT)/agent_cpe_extractor: $(CPE_EXTRACT)/agent_cpe_extractor.o $(COMMON_DEPS)
	$(P_BIN) "Compiling $@"
	gcc -g -o $@ $^ $(FLAGS)

$(NVD_GENERATE)/nvd_database_create: $(NVD_GENERATE)/nvd_database_create.o $(COMMON_DEPS) $(DB_SCHEMA).o
	$(P_BIN) "Compiling $@"
	gcc -g -o $@ $^ $(FLAGS)

$(DB_SCHEMA).o:
	$(P_OBJ) "Compiling $@"
	@echo 'const char *cpe_schema = "'"`cat $(DB_SCHEMA).sql | tr -d \"\n\"`"'";' | gcc -xc -c -o $@ -

%.o: %.c
	$(P_OBJ) "Compiling $@"
	gcc -c -g -o $@ $^ $(FLAGS)

$(LSQLITE):
	$(P_EXT) "Building $@"
	cd $(EXTERNAL) && tar -zxf $(patsubst $(EXTERNAL)/lib%3.a,%.tar.gz,$@)
	@printf '$(CEXTERN)'
	@cd $(EXTERNAL)/sqlite && ./configure
	@cd $(EXTERNAL)/sqlite && make $(P_DEPS)
	@cp $(EXTERNAL)/sqlite/.libs/libsqlite3.a $@
	@printf '$(CEND)'

clean:
	@rm -f $(POC_BINARIES) $(LSQLITE) `find ./ -name "*.o"`
