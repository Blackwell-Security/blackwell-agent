BEGIN;

CREATE TABLE IF NOT EXISTS `NVD_METADATA` (
    `ID` integer primary key autoincrement,
    `CREATED` integer,
    `UPDATED` integer,
    `URL` text,
    `HASH` text,
    `LAST_MODIFIED` integer not null
);

CREATE TABLE IF NOT EXISTS `NVD_CVE` (
    `ID` integer primary key autoincrement,
    `NVD_METADATA_ID` text,
    `CVE_ID` text not null,
    `CWE_ID` text,
    `DESCRIPTION` text,
    `PUBLISHED` integer,
    `LAST_MODIFIED` integer
);

CREATE TABLE IF NOT EXISTS `NVD_METRIC_CVSS3` (
    `ID` integer primary key autoincrement,
    `NVD_CVE_ID` text not null,
    `VECTOR_STRING` text,
    `ATTACK_VECTOR` text,
    `ATTACK_COMPLEXITY` text,
    `PRIVILEGES_REQUIRED` text,
    `USER_INTERACTION` text,
    `SCOPE` text,
    `CONFIDENTIALITY_IMPACT` text,
    `INTEGRITY_IMPACT` text,
    `AVAIABILITY_IMPACT` text,
    `BASE_SCORE` real,
    `EXPLOITABILITY_SCORE` real,
    `IMPACT_SCORE` real
);

CREATE TABLE IF NOT EXISTS `NVD_METRIC_CVSS2` (
    `ID` integer primary key autoincrement,
    `NVD_CVE_ID` text not null,
    `VECTOR_STRING` text,
    `ACCESS_VECTOR` integer,
    `ACCESS_COMPLEXITY` text,
    `AUTHENTICATION` text,
    `CONFIDENTIALITY_IMPACT` text,
    `INTEGRITY_IMPACT` text,
    `AVAILABILITY_IMPACT` text,
    `BASE_SCORE` real,
    `SEVERITY` text,
    `EXPLOITABILITY_SCORE` real,
    `IMPACT_SCORE` real,
    `OBTAIN_ALL_PRIVILEGE` integer,
    `OBTAIN_USER_PRIVILEGE` integer,
    `OBTAIN_OTHER_PRIVILEGE` integer,
    `USER_INTERACTION_REQUIRED` integer
);

CREATE TABLE IF NOT EXISTS `NVD_REFERENCE` (
    `ID` integer primary key autoincrement,
    `NVD_CVE_ID` text not null,
    `NAME` text,
    `URL` text,
    `REF_SOURCE` text,
    `TAG` text
);

CREATE TABLE IF NOT EXISTS `NVD_CVE_MATCH` (
    `ID` integer primary key autoincrement,
    `NVD_CVE_ID` text not null,
    `OPERATOR` text
);

CREATE TABLE IF NOT EXISTS `NVD_CPE` (
	`ID` integer primary key autoincrement,
    `NVD_CVE_MATCH_ID` text not null,
    `URI` text,
    `PART` text,
    `VENDOR` text,
    `PRODUCT` text,
    `VERSION` text,
    `UPDATEV` text,
    `EDITION` text,
    `LANGUAGE` text,
    `SW_EDITION` text,
    `TARGET_SW` text,
    `TARGET_HW` text,
    `OTHER` text,
    `VULNERABLE` text,
    `VERSION_START_EXCLUDING` text,
    `VERSION_START_INCLUDING` text,
    `VERSION_END_EXCLUDING` text,
    `VERSION_END_INCLUDING` text
);

CREATE TABLE IF NOT EXISTS AGENTS (
     AGENT_ID INT NOT NULL,
     CPE_INDEX_ID INT DEFAULT 0,
     VENDOR TEXT NOT NULL,
     PACKAGE_NAME TEXT NOT NULL,
     VERSION TEXT NOT NULL,
     ARCH TEXT NOT NULL,
     PRIMARY KEY(AGENT_ID, VENDOR, PACKAGE_NAME, VERSION, ARCH)
);

CREATE TABLE IF NOT EXISTS `CPE_INDEX` (
	`ID` integer primary key autoincrement,
    `PART` text,
    `VENDOR` text not null,
    `PRODUCT` text not null,
    `VERSION` text not null,
    `UPDATEV` text,
    `EDITION` text,
    `LANGUAGE` text,
    `SW_EDITION` text,
    `TARGET_SW` text,
    `TARGET_HW` text,
    `OTHER` text
);

CREATE INDEX IF NOT EXISTS `IDX_METADATA_LASTMOD` ON `NVD_METADATA`(LAST_MODIFIED);
CREATE INDEX IF NOT EXISTS `IDX_NVD_CVE_ID` ON `NVD_CVE`(CVE_ID);
CREATE INDEX IF NOT EXISTS `IDX_CVSS3_NVDCVE_ID` ON `NVD_METRIC_CVSS3`(NVD_CVE_ID);
CREATE INDEX IF NOT EXISTS `IDX_CVSS2_NVDCVE_ID` ON `NVD_METRIC_CVSS2`(NVD_CVE_ID);
CREATE INDEX IF NOT EXISTS `IDX_REF_NVDCVE_ID` ON `NVD_REFERENCE`(NVD_CVE_ID);
CREATE INDEX IF NOT EXISTS `IDX_MATCH_NVDCVE_ID` ON `NVD_CVE_MATCH`(NVD_CVE_ID);
CREATE INDEX IF NOT EXISTS `IDX_CPE_NVD_CVE_MATCH_ID` ON `NVD_CPE`(NVD_CVE_MATCH_ID);
CREATE INDEX IF NOT EXISTS `CPE_ID` ON `CPE_INDEX`(ID);
CREATE INDEX IF NOT EXISTS `CPE_VENDOR` ON `CPE_INDEX`(VENDOR);
CREATE INDEX IF NOT EXISTS `CPE_PRODUCT` ON `CPE_INDEX`(PRODUCT);
CREATE INDEX IF NOT EXISTS `CPE_VERSION` ON `CPE_INDEX`(VERSION);

END;
