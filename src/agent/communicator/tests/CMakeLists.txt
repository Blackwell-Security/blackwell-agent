find_package(GTest CONFIG REQUIRED)

add_executable(communicator_test communicator_test.cpp)
configure_target(communicator_test)
target_include_directories(communicator_test SYSTEM PRIVATE ${JWT_CPP_INCLUDE_DIRS})
target_compile_definitions(communicator_test PRIVATE -DJWT_DISABLE_PICOJSON=ON)
target_link_libraries(communicator_test PUBLIC Communicator GTest::gtest GTest::gtest_main GTest::gmock GTest::gmock_main Logger)
add_test(NAME CommunicatorTest COMMAND communicator_test)

add_executable(http_client_test http_client_test.cpp)
configure_target(http_client_test)
target_link_libraries(http_client_test PUBLIC Communicator GTest::gtest GTest::gtest_main GTest::gmock GTest::gmock_main)
add_test(NAME HttpClientTest COMMAND http_client_test)

if(WIN32)
elseif(APPLE)
    add_executable(https_verifier_test https_verifier_mac_test.cpp)
    configure_target(https_verifier_test)
    target_include_directories(https_verifier_test PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../include)
    target_link_libraries(https_verifier_test PUBLIC Communicator GTest::gtest GTest::gtest_main GTest::gmock GTest::gmock_main)
    add_test(NAME HttpsVerifierTest COMMAND https_verifier_test)
else()
endif()
